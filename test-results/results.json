{"numTotalTestSuites":88,"numPassedTestSuites":82,"numFailedTestSuites":6,"numPendingTestSuites":0,"numTotalTests":185,"numPassedTests":179,"numFailedTests":6,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1752194837091,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["User Types","UserSchema"],"fullName":"User Types UserSchema should validate a valid user object","status":"passed","title":"should validate a valid user object","duration":1.9468329999999696,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserSchema"],"fullName":"User Types UserSchema should reject invalid user objects","status":"passed","title":"should reject invalid user objects","duration":1.5184169999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserSchema"],"fullName":"User Types UserSchema should handle date parsing","status":"passed","title":"should handle date parsing","duration":0.22995900000000802,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserCredentialsSchema"],"fullName":"User Types UserCredentialsSchema should validate valid login requests","status":"passed","title":"should validate valid login requests","duration":0.32920799999999417,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserCredentialsSchema"],"fullName":"User Types UserCredentialsSchema should reject invalid login requests","status":"passed","title":"should reject invalid login requests","duration":0.37483399999996436,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserRegistrationSchema"],"fullName":"User Types UserRegistrationSchema should validate valid registration requests","status":"passed","title":"should validate valid registration requests","duration":0.26554200000009587,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserRegistrationSchema"],"fullName":"User Types UserRegistrationSchema should reject invalid registration requests","status":"passed","title":"should reject invalid registration requests","duration":0.28025000000002365,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserRegistrationSchema"],"fullName":"User Types UserRegistrationSchema should validate name length constraints","status":"passed","title":"should validate name length constraints","duration":0.17741699999999128,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeSchema"],"fullName":"Recipe Types RecipeSchema should validate a valid recipe object","status":"passed","title":"should validate a valid recipe object","duration":1.0610000000000355,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeSchema"],"fullName":"Recipe Types RecipeSchema should reject invalid recipe objects","status":"passed","title":"should reject invalid recipe objects","duration":0.8332500000000209,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeSchema"],"fullName":"Recipe Types RecipeSchema should handle optional fields","status":"passed","title":"should handle optional fields","duration":0.1844579999999496,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeCreateSchema"],"fullName":"Recipe Types RecipeCreateSchema should validate valid create recipe requests","status":"passed","title":"should validate valid create recipe requests","duration":0.39908300000001873,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeCreateSchema"],"fullName":"Recipe Types RecipeCreateSchema should reject invalid create recipe requests","status":"passed","title":"should reject invalid create recipe requests","duration":0.25841600000012477,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeUpdateSchema"],"fullName":"Recipe Types RecipeUpdateSchema should validate valid update recipe requests","status":"passed","title":"should validate valid update recipe requests","duration":0.5830000000000837,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeUpdateSchema"],"fullName":"Recipe Types RecipeUpdateSchema should allow partial updates","status":"passed","title":"should allow partial updates","duration":0.19699999999988904,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeUpdateSchema"],"fullName":"Recipe Types RecipeUpdateSchema should reject invalid update recipe requests","status":"passed","title":"should reject invalid update recipe requests","duration":0.43004099999984646,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Types","ApiResponseSchema"],"fullName":"API Types ApiResponseSchema should validate valid API responses","status":"passed","title":"should validate valid API responses","duration":0.35783299999980045,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Types","ApiResponseSchema"],"fullName":"API Types ApiResponseSchema should reject invalid API responses","status":"passed","title":"should reject invalid API responses","duration":0.14699999999993452,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Types","ErrorResponseSchema"],"fullName":"API Types ErrorResponseSchema should validate valid error responses","status":"passed","title":"should validate valid error responses","duration":0.41141700000002857,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Types","ErrorResponseSchema"],"fullName":"API Types ErrorResponseSchema should reject invalid error responses","status":"passed","title":"should reject invalid error responses","duration":0.3222920000000613,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Inference"],"fullName":"Type Inference should infer correct types from schemas","status":"passed","title":"should infer correct types from schemas","duration":0.1620829999999387,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Inference"],"fullName":"Type Inference should handle complex nested types","status":"passed","title":"should handle complex nested types","duration":0.2969590000000153,"failureMessages":[],"meta":{}},{"ancestorTitles":["Schema Composition"],"fullName":"Schema Composition should compose schemas correctly","status":"passed","title":"should compose schemas correctly","duration":0.4452080000000933,"failureMessages":[],"meta":{}},{"ancestorTitles":["Schema Composition"],"fullName":"Schema Composition should handle schema picking and omitting","status":"passed","title":"should handle schema picking and omitting","duration":0.25216599999998834,"failureMessages":[],"meta":{}}],"startTime":1752194838145,"endTime":1752194838157.4453,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/shared/src/__tests__/types.test.ts"},{"assertionResults":[{"ancestorTitles":["Validation Functions","validateEmail"],"fullName":"Validation Functions validateEmail should return true for valid email addresses","status":"passed","title":"should return true for valid email addresses","duration":1.41941700000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateEmail"],"fullName":"Validation Functions validateEmail should return false for invalid email addresses","status":"passed","title":"should return false for invalid email addresses","duration":1.2028329999999983,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateEmail"],"fullName":"Validation Functions validateEmail should handle edge cases","status":"passed","title":"should handle edge cases","duration":0.1790409999999838,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validatePassword"],"fullName":"Validation Functions validatePassword should return valid result for strong passwords","status":"passed","title":"should return valid result for strong passwords","duration":0.8488750000000209,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validatePassword"],"fullName":"Validation Functions validatePassword should return invalid result for weak passwords","status":"passed","title":"should return invalid result for weak passwords","duration":0.6845410000000243,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validatePassword"],"fullName":"Validation Functions validatePassword should handle edge cases","status":"passed","title":"should handle edge cases","duration":0.19379200000003038,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should return valid result for complete recipe data","status":"passed","title":"should return valid result for complete recipe data","duration":0.3100000000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should return invalid result for missing required fields","status":"passed","title":"should return invalid result for missing required fields","duration":0.28624999999999545,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate title constraints","status":"passed","title":"should validate title constraints","duration":0.38737500000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate ingredients format","status":"passed","title":"should validate ingredients format","duration":0.3222499999999968,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate cook_time constraints","status":"passed","title":"should validate cook_time constraints","duration":0.09104200000001583,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate servings constraints","status":"passed","title":"should validate servings constraints","duration":0.07845800000001191,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate difficulty values","status":"passed","title":"should validate difficulty values","duration":0.09979199999997945,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate tags format","status":"passed","title":"should validate tags format","duration":0.08737500000000864,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should handle optional fields","status":"passed","title":"should handle optional fields","duration":0.059082999999986896,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should return valid result for complete user data","status":"passed","title":"should return valid result for complete user data","duration":0.1974999999999909,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should return invalid result for missing required fields","status":"passed","title":"should return invalid result for missing required fields","duration":0.14949999999998909,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should validate email format","status":"passed","title":"should validate email format","duration":0.13966699999997445,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should validate name constraints","status":"passed","title":"should validate name constraints","duration":0.09666699999996808,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should validate password strength","status":"passed","title":"should validate password strength","duration":0.09579100000001972,"failureMessages":[],"meta":{}},{"ancestorTitles":["ValidationError Class"],"fullName":"ValidationError Class should create ValidationError with proper properties","status":"passed","title":"should create ValidationError with proper properties","duration":1.10204200000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["ValidationError Class"],"fullName":"ValidationError Class should convert to API error format","status":"passed","title":"should convert to API error format","duration":0.8749579999999924,"failureMessages":[],"meta":{}},{"ancestorTitles":["validate function"],"fullName":"validate function should return parsed data when validation succeeds","status":"passed","title":"should return parsed data when validation succeeds","duration":0.28208299999994324,"failureMessages":[],"meta":{}},{"ancestorTitles":["validate function"],"fullName":"validate function should throw ValidationError when validation fails","status":"passed","title":"should throw ValidationError when validation fails","duration":0.3750830000000178,"failureMessages":[],"meta":{}},{"ancestorTitles":["validate function"],"fullName":"validate function should handle complex nested validation","status":"passed","title":"should handle complex nested validation","duration":0.7925000000000182,"failureMessages":[],"meta":{}}],"startTime":1752194838668,"endTime":1752194838678.7925,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/shared/src/__tests__/validation.test.ts"},{"assertionResults":[{"ancestorTitles":["LoginForm Component","Authentication State"],"fullName":"LoginForm Component Authentication State should redirect to dashboard if already authenticated","status":"passed","title":"should redirect to dashboard if already authenticated","duration":11.350625000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["LoginForm Component","Authentication State"],"fullName":"LoginForm Component Authentication State should render form if not authenticated","status":"passed","title":"should render form if not authenticated","duration":8.031375000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["LoginForm Component","Mock Verification"],"fullName":"LoginForm Component Mock Verification should have properly mocked auth functions","status":"passed","title":"should have properly mocked auth functions","duration":0.19399999999995998,"failureMessages":[],"meta":{}},{"ancestorTitles":["LoginForm Component","Mock Verification"],"fullName":"LoginForm Component Mock Verification should call login when invoked","status":"passed","title":"should call login when invoked","duration":0.5964579999999842,"failureMessages":[],"meta":{}}],"startTime":1752194839384,"endTime":1752194839404.5964,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/client/src/__tests__/components/LoginForm.test.tsx"},{"assertionResults":[{"ancestorTitles":["Navigation Component","Unauthenticated State"],"fullName":"Navigation Component Unauthenticated State should render navigation items even when user is not authenticated","status":"passed","title":"should render navigation items even when user is not authenticated","duration":20.640667000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Authenticated State"],"fullName":"Navigation Component Authenticated State should render navigation items when authenticated","status":"passed","title":"should render navigation items when authenticated","duration":4.664834000000042,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Authenticated State"],"fullName":"Navigation Component Authenticated State should render user menu button","status":"passed","title":"should render user menu button","duration":10.259709000000043,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Authenticated State"],"fullName":"Navigation Component Authenticated State should render navigation links with correct hrefs","status":"passed","title":"should render navigation links with correct hrefs","duration":6.456541000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Authenticated State"],"fullName":"Navigation Component Authenticated State should highlight active navigation item","status":"passed","title":"should highlight active navigation item","duration":9.486791999999923,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Authenticated State"],"fullName":"Navigation Component Authenticated State should render mobile menu button","status":"passed","title":"should render mobile menu button","duration":5.4950000000000045,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Authenticated State"],"fullName":"Navigation Component Authenticated State should render user menu button for interaction","status":"passed","title":"should render user menu button for interaction","duration":3.3100829999999632,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Loading State"],"fullName":"Navigation Component Loading State should handle loading state appropriately","status":"passed","title":"should handle loading state appropriately","duration":3.316249999999968,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Accessibility"],"fullName":"Navigation Component Accessibility should have proper ARIA labels for navigation","status":"passed","title":"should have proper ARIA labels for navigation","duration":10.672207999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Accessibility"],"fullName":"Navigation Component Accessibility should have proper focus management","status":"passed","title":"should have proper focus management","duration":8.582415999999967,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Accessibility"],"fullName":"Navigation Component Accessibility should support keyboard navigation","status":"passed","title":"should support keyboard navigation","duration":27.646041999999966,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Logo and Branding"],"fullName":"Navigation Component Logo and Branding should display logo or brand name","status":"passed","title":"should display logo or brand name","duration":7.1865830000000415,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Logo and Branding"],"fullName":"Navigation Component Logo and Branding should link logo to dashboard page","status":"passed","title":"should link logo to dashboard page","duration":6.8306669999999485,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Active Route Highlighting"],"fullName":"Navigation Component Active Route Highlighting should highlight recipes page when on recipes route","status":"passed","title":"should highlight recipes page when on recipes route","duration":8.18116699999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Active Route Highlighting"],"fullName":"Navigation Component Active Route Highlighting should highlight add recipe page when on add recipe route","status":"passed","title":"should highlight add recipe page when on add recipe route","duration":4.240709000000038,"failureMessages":[],"meta":{}}],"startTime":1752194839386,"endTime":1752194839523.2407,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/client/src/__tests__/components/Navigation.test.tsx"},{"assertionResults":[{"ancestorTitles":["useAuth Hook","Initial State"],"fullName":"useAuth Hook Initial State should initialize with null user and loading state","status":"passed","title":"should initialize with null user and loading state","duration":14.628125000000068,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Initial State"],"fullName":"useAuth Hook Initial State should restore user from storage if authenticated","status":"passed","title":"should restore user from storage if authenticated","duration":55.31366700000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Initial State"],"fullName":"useAuth Hook Initial State should clear auth if token is invalid","status":"passed","title":"should clear auth if token is invalid","duration":54.557333000000085,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Login"],"fullName":"useAuth Hook Login should login successfully and navigate to dashboard","status":"passed","title":"should login successfully and navigate to dashboard","duration":4.426707999999962,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Login"],"fullName":"useAuth Hook Login should handle login errors","status":"passed","title":"should handle login errors","duration":3.961584000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Login"],"fullName":"useAuth Hook Login should set loading state during login","status":"passed","title":"should set loading state during login","duration":55.903958999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Register"],"fullName":"useAuth Hook Register should register successfully and navigate to dashboard","status":"passed","title":"should register successfully and navigate to dashboard","duration":7.130041000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Register"],"fullName":"useAuth Hook Register should handle registration errors","status":"passed","title":"should handle registration errors","duration":4.136250000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Logout"],"fullName":"useAuth Hook Logout should logout successfully and navigate to login","status":"passed","title":"should logout successfully and navigate to login","duration":4.5741669999999885,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Logout"],"fullName":"useAuth Hook Logout should handle logout errors gracefully","status":"passed","title":"should handle logout errors gracefully","duration":6.13595799999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Profile Update"],"fullName":"useAuth Hook Profile Update should update profile successfully","status":"passed","title":"should update profile successfully","duration":1.9711249999999154,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Profile Update"],"fullName":"useAuth Hook Profile Update should handle profile update errors","status":"passed","title":"should handle profile update errors","duration":1.1674170000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Password Change"],"fullName":"useAuth Hook Password Change should change password successfully","status":"passed","title":"should change password successfully","duration":1.9560000000000173,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Password Change"],"fullName":"useAuth Hook Password Change should handle password change errors","status":"passed","title":"should handle password change errors","duration":2.025624999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Refresh User"],"fullName":"useAuth Hook Refresh User should refresh user data successfully","status":"passed","title":"should refresh user data successfully","duration":0.8635000000000446,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Refresh User"],"fullName":"useAuth Hook Refresh User should handle refresh user errors","status":"passed","title":"should handle refresh user errors","duration":3.7719170000000304,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Error Handling"],"fullName":"useAuth Hook Error Handling should throw error when used outside AuthProvider","status":"passed","title":"should throw error when used outside AuthProvider","duration":2.5885410000000775,"failureMessages":[],"meta":{}}],"startTime":1752194838894,"endTime":1752194839119.5886,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/client/src/__tests__/hooks/useAuth.test.tsx"},{"assertionResults":[{"ancestorTitles":["ApiClient","Authentication"],"fullName":"ApiClient Authentication should return true when authenticated","status":"passed","title":"should return true when authenticated","duration":0.7375829999999723,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Authentication"],"fullName":"ApiClient Authentication should return false when not authenticated","status":"passed","title":"should return false when not authenticated","duration":0.10062500000003638,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Authentication"],"fullName":"ApiClient Authentication should get stored user from localStorage","status":"passed","title":"should get stored user from localStorage","duration":0.3781249999999545,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Authentication"],"fullName":"ApiClient Authentication should return null when no user is stored","status":"passed","title":"should return null when no user is stored","duration":0.2878329999999778,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Authentication"],"fullName":"ApiClient Authentication should clear auth data","status":"passed","title":"should clear auth data","duration":1.1968749999999773,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Recipe Methods"],"fullName":"ApiClient Recipe Methods should call getRecipes with correct parameters","status":"passed","title":"should call getRecipes with correct parameters","duration":0.2393329999999878,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Recipe Methods"],"fullName":"ApiClient Recipe Methods should call getRecipe with correct ID","status":"passed","title":"should call getRecipe with correct ID","duration":0.1772080000000642,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Recipe Methods"],"fullName":"ApiClient Recipe Methods should call createRecipe with recipe data","status":"passed","title":"should call createRecipe with recipe data","duration":0.10550000000000637,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Recipe Methods"],"fullName":"ApiClient Recipe Methods should call updateRecipe with ID and data","status":"passed","title":"should call updateRecipe with ID and data","duration":0.302915999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Recipe Methods"],"fullName":"ApiClient Recipe Methods should call deleteRecipe with ID","status":"passed","title":"should call deleteRecipe with ID","duration":0.302332999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Auth Methods"],"fullName":"ApiClient Auth Methods should call login with credentials","status":"passed","title":"should call login with credentials","duration":0.16483399999992798,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Auth Methods"],"fullName":"ApiClient Auth Methods should call register with user data","status":"passed","title":"should call register with user data","duration":0.2524159999999256,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Auth Methods"],"fullName":"ApiClient Auth Methods should call logout","status":"passed","title":"should call logout","duration":0.07787499999994907,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Auth Methods"],"fullName":"ApiClient Auth Methods should call getCurrentUser","status":"passed","title":"should call getCurrentUser","duration":0.06712500000003274,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Auth Methods"],"fullName":"ApiClient Auth Methods should call getUserStats","status":"passed","title":"should call getUserStats","duration":0.06766700000002857,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Utility Methods"],"fullName":"ApiClient Utility Methods should call searchRecipes with parameters","status":"passed","title":"should call searchRecipes with parameters","duration":0.08287500000005821,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Utility Methods"],"fullName":"ApiClient Utility Methods should call getRecipeCategories","status":"passed","title":"should call getRecipeCategories","duration":0.05716600000005201,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Utility Methods"],"fullName":"ApiClient Utility Methods should call uploadImage with file","status":"passed","title":"should call uploadImage with file","duration":0.18737499999997453,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Utility Methods"],"fullName":"ApiClient Utility Methods should call getUserRecipes","status":"passed","title":"should call getUserRecipes","duration":0.0678330000000642,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Utility Methods"],"fullName":"ApiClient Utility Methods should call updateProfile","status":"passed","title":"should call updateProfile","duration":0.06395799999995688,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Utility Methods"],"fullName":"ApiClient Utility Methods should call changePassword","status":"passed","title":"should call changePassword","duration":0.06304199999999582,"failureMessages":[],"meta":{}}],"startTime":1752194839746,"endTime":1752194839752.1873,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/client/src/__tests__/services/api.test.ts"},{"assertionResults":[{"ancestorTitles":["Auth Middleware","authenticate"],"fullName":"Auth Middleware authenticate should authenticate valid token and add user to request","status":"passed","title":"should authenticate valid token and add user to request","duration":2.0263330000000224,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","authenticate"],"fullName":"Auth Middleware authenticate should throw ApiError for missing authorization header","status":"passed","title":"should throw ApiError for missing authorization header","duration":1.0515829999999937,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","authenticate"],"fullName":"Auth Middleware authenticate should throw ApiError for invalid token format","status":"passed","title":"should throw ApiError for invalid token format","duration":0.8759169999999585,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","authenticate"],"fullName":"Auth Middleware authenticate should throw ApiError for expired token","status":"passed","title":"should throw ApiError for expired token","duration":0.9355830000000083,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","authenticate"],"fullName":"Auth Middleware authenticate should throw ApiError for invalid token","status":"passed","title":"should throw ApiError for invalid token","duration":0.3111250000000041,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","authenticate"],"fullName":"Auth Middleware authenticate should handle ApiError from AuthUtils correctly","status":"passed","title":"should handle ApiError from AuthUtils correctly","duration":0.2949999999999591,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","optionalAuth"],"fullName":"Auth Middleware optionalAuth should authenticate valid token and add user to request","status":"passed","title":"should authenticate valid token and add user to request","duration":0.33654200000000856,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","optionalAuth"],"fullName":"Auth Middleware optionalAuth should continue without user for missing authorization header","status":"passed","title":"should continue without user for missing authorization header","duration":0.15137500000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","optionalAuth"],"fullName":"Auth Middleware optionalAuth should continue without user for invalid token format","status":"passed","title":"should continue without user for invalid token format","duration":0.2386250000000132,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","optionalAuth"],"fullName":"Auth Middleware optionalAuth should continue without user for expired token","status":"passed","title":"should continue without user for expired token","duration":0.1290000000000191,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","optionalAuth"],"fullName":"Auth Middleware optionalAuth should continue without user for invalid token","status":"passed","title":"should continue without user for invalid token","duration":0.09666699999996808,"failureMessages":[],"meta":{}}],"startTime":1752194838647,"endTime":1752194838653.2385,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/server/src/__tests__/unit/middleware/auth.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthUtils","hashPassword"],"fullName":"AuthUtils hashPassword should hash a password","status":"passed","title":"should hash a password","duration":360.533041,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","hashPassword"],"fullName":"AuthUtils hashPassword should create different hashes for the same password","status":"passed","title":"should create different hashes for the same password","duration":637.698292,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","hashPassword"],"fullName":"AuthUtils hashPassword should handle empty password","status":"passed","title":"should handle empty password","duration":306.87908400000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","comparePassword"],"fullName":"AuthUtils comparePassword should return true for matching password and hash","status":"passed","title":"should return true for matching password and hash","duration":625.290958,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","comparePassword"],"fullName":"AuthUtils comparePassword should return false for non-matching password and hash","status":"passed","title":"should return false for non-matching password and hash","duration":562.9411250000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","comparePassword"],"fullName":"AuthUtils comparePassword should return false for empty password","status":"passed","title":"should return false for empty password","duration":747.8816670000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","comparePassword"],"fullName":"AuthUtils comparePassword should return false for invalid hash","status":"passed","title":"should return false for invalid hash","duration":0.20316600000023755,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","generateTokens"],"fullName":"AuthUtils generateTokens should generate access and refresh tokens","status":"passed","title":"should generate access and refresh tokens","duration":0.5860000000002401,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","generateAccessToken"],"fullName":"AuthUtils generateAccessToken should generate an access token","status":"passed","title":"should generate an access token","duration":1.0103750000007494,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","generateRefreshToken"],"fullName":"AuthUtils generateRefreshToken should generate a refresh token","status":"passed","title":"should generate a refresh token","duration":0.28516599999966274,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","verifyToken"],"fullName":"AuthUtils verifyToken should verify a valid token","status":"passed","title":"should verify a valid token","duration":0.20520800000031159,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","verifyToken"],"fullName":"AuthUtils verifyToken should throw error for invalid token","status":"passed","title":"should throw error for invalid token","duration":0.575249999999869,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","verifyToken"],"fullName":"AuthUtils verifyToken should throw error for expired token","status":"passed","title":"should throw error for expired token","duration":0.11537500000031287,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","verifyToken"],"fullName":"AuthUtils verifyToken should throw generic error for other verification failures","status":"passed","title":"should throw generic error for other verification failures","duration":0.10133399999995163,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","extractTokenFromHeader"],"fullName":"AuthUtils extractTokenFromHeader should extract token from Authorization header","status":"passed","title":"should extract token from Authorization header","duration":0.06454200000007404,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","extractTokenFromHeader"],"fullName":"AuthUtils extractTokenFromHeader should return null for missing Authorization header","status":"passed","title":"should return null for missing Authorization header","duration":0.06566699999984849,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","extractTokenFromHeader"],"fullName":"AuthUtils extractTokenFromHeader should return null for invalid Authorization header format","status":"passed","title":"should return null for invalid Authorization header format","duration":0.04008400000020629,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","extractTokenFromHeader"],"fullName":"AuthUtils extractTokenFromHeader should return null for missing Bearer prefix","status":"passed","title":"should return null for missing Bearer prefix","duration":0.03879200000028504,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","extractTokenFromHeader"],"fullName":"AuthUtils extractTokenFromHeader should return null for empty token","status":"passed","title":"should return null for empty token","duration":0.04208399999970425,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should validate a strong password","status":"passed","title":"should validate a strong password","duration":0.310750000000553,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should reject password that is too short","status":"failed","title":"should reject password that is too short","duration":3.9885000000003856,"failureMessages":["AssertionError: expected [ 'minLength' ] to include 'Password must be at least 8 character…'\n    at Proxy.<anonymous> (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/expect/dist/index.js:1191:15)\n    at Proxy.<anonymous> (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/chai/chai.js:1706:25)\n    at /Users/benh/GitHub/Recipe-Manager-SPA/packages/server/src/__tests__/unit/utils/auth.test.ts:234:29\n    at file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)"],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should reject password without lowercase","status":"failed","title":"should reject password without lowercase","duration":0.403334000000541,"failureMessages":["AssertionError: expected [ 'lowercase' ] to include 'Password must contain at least one lo…'\n    at Proxy.<anonymous> (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/expect/dist/index.js:1191:15)\n    at Proxy.<anonymous> (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/chai/chai.js:1706:25)\n    at /Users/benh/GitHub/Recipe-Manager-SPA/packages/server/src/__tests__/unit/utils/auth.test.ts:242:29\n    at file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)"],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should reject password without uppercase","status":"failed","title":"should reject password without uppercase","duration":0.26329100000020844,"failureMessages":["AssertionError: expected [ 'uppercase' ] to include 'Password must contain at least one up…'\n    at Proxy.<anonymous> (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/expect/dist/index.js:1191:15)\n    at Proxy.<anonymous> (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/chai/chai.js:1706:25)\n    at /Users/benh/GitHub/Recipe-Manager-SPA/packages/server/src/__tests__/unit/utils/auth.test.ts:250:29\n    at file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)"],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should reject password without number","status":"failed","title":"should reject password without number","duration":0.18887499999982538,"failureMessages":["AssertionError: expected [ 'number' ] to include 'Password must contain at least one nu…'\n    at Proxy.<anonymous> (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/expect/dist/index.js:1191:15)\n    at Proxy.<anonymous> (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/chai/chai.js:1706:25)\n    at /Users/benh/GitHub/Recipe-Manager-SPA/packages/server/src/__tests__/unit/utils/auth.test.ts:258:29\n    at file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)"],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should reject password without special character","status":"failed","title":"should reject password without special character","duration":0.3328750000000582,"failureMessages":["AssertionError: expected [ 'specialChar' ] to include 'Password must contain at least one sp…'\n    at Proxy.<anonymous> (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/expect/dist/index.js:1191:15)\n    at Proxy.<anonymous> (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/chai/chai.js:1706:25)\n    at /Users/benh/GitHub/Recipe-Manager-SPA/packages/server/src/__tests__/unit/utils/auth.test.ts:266:29\n    at file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)"],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should return multiple errors for weak password","status":"passed","title":"should return multiple errors for weak password","duration":0.056416999999783,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","sanitizeUserResponse"],"fullName":"AuthUtils sanitizeUserResponse should remove password_hash from user object","status":"passed","title":"should remove password_hash from user object","duration":0.30883300000004965,"failureMessages":[],"meta":{}}],"startTime":1752194838114,"endTime":1752194841365.3088,"status":"failed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/server/src/__tests__/unit/utils/auth.test.ts"},{"assertionResults":[{"ancestorTitles":["RecipeService","getAllRecipes"],"fullName":"RecipeService getAllRecipes should return paginated recipes with default pagination","status":"passed","title":"should return paginated recipes with default pagination","duration":3.4455840000000535,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getAllRecipes"],"fullName":"RecipeService getAllRecipes should filter recipes by search term","status":"passed","title":"should filter recipes by search term","duration":0.7132500000000164,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getAllRecipes"],"fullName":"RecipeService getAllRecipes should filter recipes by category","status":"passed","title":"should filter recipes by category","duration":0.29283300000008694,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getAllRecipes"],"fullName":"RecipeService getAllRecipes should filter recipes by difficulty and user","status":"passed","title":"should filter recipes by difficulty and user","duration":0.28224999999997635,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getAllRecipes"],"fullName":"RecipeService getAllRecipes should handle custom pagination","status":"passed","title":"should handle custom pagination","duration":0.37400000000002365,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getRecipeById"],"fullName":"RecipeService getRecipeById should return recipe by ID","status":"passed","title":"should return recipe by ID","duration":0.4366669999999431,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getRecipeById"],"fullName":"RecipeService getRecipeById should return null if recipe not found","status":"passed","title":"should return null if recipe not found","duration":0.08520899999996345,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","createRecipe"],"fullName":"RecipeService createRecipe should create a new recipe successfully","status":"failed","title":"should create a new recipe successfully","duration":4.954500000000053,"failureMessages":["AssertionError: expected \"spy\" to be called with arguments: [ { data: { …(9) }, …(1) } ]\u001b[90m\n\nReceived: \n\n\u001b[1m  1st spy call:\n\n\u001b[22m\u001b[33m@@ -2,10 +2,11 @@\u001b[90m\n\u001b[2m    {\u001b[22m\n\u001b[2m      \"data\": {\u001b[22m\n\u001b[2m        \"category\": \"Main Course\",\u001b[22m\n\u001b[2m        \"cook_time\": 45,\u001b[22m\n\u001b[2m        \"difficulty\": \"Medium\",\u001b[22m\n\u001b[31m+       \"image_url\": null,\u001b[90m\n\u001b[2m        \"ingredients\": \"[\\\"ingredient 1\\\",\\\"ingredient 2\\\"]\",\u001b[22m\n\u001b[2m        \"instructions\": \"Mix and cook\",\u001b[22m\n\u001b[2m        \"servings\": 6,\u001b[22m\n\u001b[2m        \"tags\": \"[\\\"tag1\\\",\\\"tag2\\\"]\",\u001b[22m\n\u001b[2m        \"title\": \"New Recipe\",\u001b[22m\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m1\u001b[22m\n\u001b[39m\n    at Proxy.<anonymous> (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/expect/dist/index.js:1355:10)\n    at Proxy.<anonymous> (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/chai/chai.js:1706:25)\n    at /Users/benh/GitHub/Recipe-Manager-SPA/packages/server/src/__tests__/unit/services/recipeService.test.ts:280:36\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///Users/benh/GitHub/Recipe-Manager-SPA/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["RecipeService","createRecipe"],"fullName":"RecipeService createRecipe should handle database errors","status":"passed","title":"should handle database errors","duration":1.3243330000000242,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","updateRecipe"],"fullName":"RecipeService updateRecipe should update recipe successfully","status":"passed","title":"should update recipe successfully","duration":0.8225840000000062,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","updateRecipe"],"fullName":"RecipeService updateRecipe should handle database errors","status":"passed","title":"should handle database errors","duration":0.4231250000000273,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","deleteRecipe"],"fullName":"RecipeService deleteRecipe should delete recipe successfully","status":"passed","title":"should delete recipe successfully","duration":0.33966700000007677,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","deleteRecipe"],"fullName":"RecipeService deleteRecipe should throw error if recipe not found","status":"passed","title":"should throw error if recipe not found","duration":0.580167000000074,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getUserRecipes"],"fullName":"RecipeService getUserRecipes should return user recipes with pagination","status":"passed","title":"should return user recipes with pagination","duration":0.25941599999998743,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","searchRecipes"],"fullName":"RecipeService searchRecipes should search recipes by query","status":"passed","title":"should search recipes by query","duration":0.26587500000005093,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getRecipesByCategory"],"fullName":"RecipeService getRecipesByCategory should return recipes by category","status":"passed","title":"should return recipes by category","duration":0.191332999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getRecipeCategories"],"fullName":"RecipeService getRecipeCategories should return unique recipe categories","status":"passed","title":"should return unique recipe categories","duration":0.1307090000000244,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","verifyRecipeOwnership"],"fullName":"RecipeService verifyRecipeOwnership should return true if user owns the recipe","status":"passed","title":"should return true if user owns the recipe","duration":0.14887500000008913,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","verifyRecipeOwnership"],"fullName":"RecipeService verifyRecipeOwnership should return false if user does not own the recipe","status":"passed","title":"should return false if user does not own the recipe","duration":0.058333000000061475,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","verifyRecipeOwnership"],"fullName":"RecipeService verifyRecipeOwnership should return false if recipe not found","status":"passed","title":"should return false if recipe not found","duration":0.04975000000001728,"failureMessages":[],"meta":{}}],"startTime":1752194838127,"endTime":1752194838143.0583,"status":"failed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/server/src/__tests__/unit/services/recipeService.test.ts"},{"assertionResults":[{"ancestorTitles":["UserService","createUser"],"fullName":"UserService createUser should create a new user successfully","status":"passed","title":"should create a new user successfully","duration":4.217042000000106,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","createUser"],"fullName":"UserService createUser should throw error if user already exists","status":"passed","title":"should throw error if user already exists","duration":1.643542000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","createUser"],"fullName":"UserService createUser should handle database errors","status":"passed","title":"should handle database errors","duration":1.2929579999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getUserById"],"fullName":"UserService getUserById should return user by ID","status":"passed","title":"should return user by ID","duration":0.39387499999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getUserById"],"fullName":"UserService getUserById should return null if user not found","status":"passed","title":"should return null if user not found","duration":0.21729099999993196,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getUserById"],"fullName":"UserService getUserById should handle database errors","status":"passed","title":"should handle database errors","duration":1.350999999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getUserByEmail"],"fullName":"UserService getUserByEmail should return user by email","status":"passed","title":"should return user by email","duration":0.6227079999999887,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getUserByEmail"],"fullName":"UserService getUserByEmail should return null if user not found","status":"passed","title":"should return null if user not found","duration":0.2973749999999882,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","updateUser"],"fullName":"UserService updateUser should update user successfully","status":"passed","title":"should update user successfully","duration":0.8797080000000506,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","updateUser"],"fullName":"UserService updateUser should throw error if user not found","status":"passed","title":"should throw error if user not found","duration":0.3581249999999727,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","updateUser"],"fullName":"UserService updateUser should throw error if email already exists","status":"passed","title":"should throw error if email already exists","duration":0.32024999999998727,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","deleteUser"],"fullName":"UserService deleteUser should delete user successfully","status":"passed","title":"should delete user successfully","duration":0.3158339999999953,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","deleteUser"],"fullName":"UserService deleteUser should throw error if user not found","status":"passed","title":"should throw error if user not found","duration":0.7118339999999534,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","authenticateUser"],"fullName":"UserService authenticateUser should authenticate user successfully","status":"passed","title":"should authenticate user successfully","duration":0.35612500000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","authenticateUser"],"fullName":"UserService authenticateUser should return null if user not found","status":"passed","title":"should return null if user not found","duration":0.07558400000004895,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","authenticateUser"],"fullName":"UserService authenticateUser should return null if password is invalid","status":"passed","title":"should return null if password is invalid","duration":0.058209000000033484,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","changePassword"],"fullName":"UserService changePassword should change password successfully","status":"passed","title":"should change password successfully","duration":0.7442500000000791,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","changePassword"],"fullName":"UserService changePassword should throw error if user not found","status":"passed","title":"should throw error if user not found","duration":0.25595800000007785,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","changePassword"],"fullName":"UserService changePassword should throw error if current password is invalid","status":"passed","title":"should throw error if current password is invalid","duration":0.21887500000002547,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getAllUsers"],"fullName":"UserService getAllUsers should return all users","status":"passed","title":"should return all users","duration":0.5419999999999163,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getUserStats"],"fullName":"UserService getUserStats should return user statistics","status":"passed","title":"should return user statistics","duration":0.359958000000006,"failureMessages":[],"meta":{}}],"startTime":1752194838104,"endTime":1752194838120.3599,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/server/src/__tests__/unit/services/userService.test.ts"}]}