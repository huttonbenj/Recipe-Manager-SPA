{"numTotalTestSuites":172,"numPassedTestSuites":172,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":430,"numPassedTests":430,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1752211142982,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["User Types","UserSchema"],"fullName":"User Types UserSchema should validate a valid user object","status":"passed","title":"should validate a valid user object","duration":2.5751249999998436,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserSchema"],"fullName":"User Types UserSchema should reject invalid user objects","status":"passed","title":"should reject invalid user objects","duration":1.105750000000171,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserSchema"],"fullName":"User Types UserSchema should handle date parsing","status":"passed","title":"should handle date parsing","duration":0.21262500000011642,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserCredentialsSchema"],"fullName":"User Types UserCredentialsSchema should validate valid login requests","status":"passed","title":"should validate valid login requests","duration":0.44516700000008314,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserCredentialsSchema"],"fullName":"User Types UserCredentialsSchema should reject invalid login requests","status":"passed","title":"should reject invalid login requests","duration":0.36445800000001327,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserRegistrationSchema"],"fullName":"User Types UserRegistrationSchema should validate valid registration requests","status":"passed","title":"should validate valid registration requests","duration":0.24350000000004002,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserRegistrationSchema"],"fullName":"User Types UserRegistrationSchema should reject invalid user registration","status":"passed","title":"should reject invalid user registration","duration":0.19591700000000856,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserRegistrationSchema"],"fullName":"User Types UserRegistrationSchema should validate name length constraints","status":"passed","title":"should validate name length constraints","duration":0.17649999999980537,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeSchema"],"fullName":"Recipe Types RecipeSchema should validate a valid recipe object","status":"passed","title":"should validate a valid recipe object","duration":0.7257090000000517,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeSchema"],"fullName":"Recipe Types RecipeSchema should reject invalid recipe objects","status":"passed","title":"should reject invalid recipe objects","duration":5.447791999999936,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeSchema"],"fullName":"Recipe Types RecipeSchema should handle optional fields","status":"passed","title":"should handle optional fields","duration":0.22062499999992724,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeCreateSchema"],"fullName":"Recipe Types RecipeCreateSchema should validate valid create recipe requests","status":"passed","title":"should validate valid create recipe requests","duration":0.39266700000007404,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeCreateSchema"],"fullName":"Recipe Types RecipeCreateSchema should reject invalid create recipe requests","status":"passed","title":"should reject invalid create recipe requests","duration":0.28254100000003746,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeUpdateSchema"],"fullName":"Recipe Types RecipeUpdateSchema should validate valid update recipe requests","status":"passed","title":"should validate valid update recipe requests","duration":0.3956670000000031,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeUpdateSchema"],"fullName":"Recipe Types RecipeUpdateSchema should allow partial updates","status":"passed","title":"should allow partial updates","duration":0.20591699999999946,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeUpdateSchema"],"fullName":"Recipe Types RecipeUpdateSchema should reject invalid update recipe requests","status":"passed","title":"should reject invalid update recipe requests","duration":0.47079200000007404,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Types","ApiResponseSchema"],"fullName":"API Types ApiResponseSchema should validate valid API responses","status":"passed","title":"should validate valid API responses","duration":0.7465829999998732,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Types","ApiResponseSchema"],"fullName":"API Types ApiResponseSchema should reject invalid API responses","status":"passed","title":"should reject invalid API responses","duration":0.16412500000001273,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Types","ErrorResponseSchema"],"fullName":"API Types ErrorResponseSchema should validate valid error responses","status":"passed","title":"should validate valid error responses","duration":0.37208400000008623,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Types","ErrorResponseSchema"],"fullName":"API Types ErrorResponseSchema should reject invalid error responses","status":"passed","title":"should reject invalid error responses","duration":0.27224999999998545,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Inference"],"fullName":"Type Inference should infer correct types from schemas","status":"passed","title":"should infer correct types from schemas","duration":0.17050000000017462,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Inference"],"fullName":"Type Inference should handle complex nested types","status":"passed","title":"should handle complex nested types","duration":0.15412500000002183,"failureMessages":[],"meta":{}},{"ancestorTitles":["Schema Composition"],"fullName":"Schema Composition should compose schemas correctly","status":"passed","title":"should compose schemas correctly","duration":0.6906670000000759,"failureMessages":[],"meta":{}},{"ancestorTitles":["Schema Composition"],"fullName":"Schema Composition should handle schema picking and omitting","status":"passed","title":"should handle schema picking and omitting","duration":0.31262500000002547,"failureMessages":[],"meta":{}}],"startTime":1752211154741,"endTime":1752211154758.3127,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/shared/src/__tests__/types.test.ts"},{"assertionResults":[{"ancestorTitles":["Validation Functions","validateEmail"],"fullName":"Validation Functions validateEmail should return true for valid email addresses","status":"passed","title":"should return true for valid email addresses","duration":5.766333000001396,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateEmail"],"fullName":"Validation Functions validateEmail should return false for invalid email addresses","status":"passed","title":"should return false for invalid email addresses","duration":2.7512079999996786,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateEmail"],"fullName":"Validation Functions validateEmail should handle edge cases","status":"passed","title":"should handle edge cases","duration":0.2242499999993015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validatePassword"],"fullName":"Validation Functions validatePassword should return valid result for strong passwords","status":"passed","title":"should return valid result for strong passwords","duration":1.9096670000017184,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validatePassword"],"fullName":"Validation Functions validatePassword should return invalid result for weak passwords","status":"passed","title":"should return invalid result for weak passwords","duration":2.228624999999738,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validatePassword"],"fullName":"Validation Functions validatePassword should handle edge cases","status":"passed","title":"should handle edge cases","duration":0.10429199999998673,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should return valid result for complete recipe data","status":"passed","title":"should return valid result for complete recipe data","duration":0.29008299999986775,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should return invalid result for missing required fields","status":"passed","title":"should return invalid result for missing required fields","duration":0.28000000000065484,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate title constraints","status":"passed","title":"should validate title constraints","duration":0.3069580000010319,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate ingredients format","status":"passed","title":"should validate ingredients format","duration":0.3512080000000424,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate cook_time constraints","status":"passed","title":"should validate cook_time constraints","duration":0.09412499999962165,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate servings constraints","status":"passed","title":"should validate servings constraints","duration":0.08029199999873526,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate difficulty values","status":"passed","title":"should validate difficulty values","duration":0.1088339999987511,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate tags format","status":"passed","title":"should validate tags format","duration":0.08974999999918509,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should handle optional fields","status":"passed","title":"should handle optional fields","duration":0.057708000000275206,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should return valid result for complete user data","status":"passed","title":"should return valid result for complete user data","duration":0.253459000001385,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should return invalid result for missing required fields","status":"passed","title":"should return invalid result for missing required fields","duration":0.2000000000007276,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should validate email format","status":"passed","title":"should validate email format","duration":0.20516700000007404,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should validate name constraints","status":"passed","title":"should validate name constraints","duration":0.12166600000091421,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should validate password strength","status":"passed","title":"should validate password strength","duration":0.09487499999886495,"failureMessages":[],"meta":{}},{"ancestorTitles":["ValidationError Class"],"fullName":"ValidationError Class should create ValidationError with proper properties","status":"passed","title":"should create ValidationError with proper properties","duration":0.9524590000000899,"failureMessages":[],"meta":{}},{"ancestorTitles":["ValidationError Class"],"fullName":"ValidationError Class should convert to API error format","status":"passed","title":"should convert to API error format","duration":0.30004100000041944,"failureMessages":[],"meta":{}},{"ancestorTitles":["validate function"],"fullName":"validate function should return parsed data when validation succeeds","status":"passed","title":"should return parsed data when validation succeeds","duration":0.26258299999972223,"failureMessages":[],"meta":{}},{"ancestorTitles":["validate function"],"fullName":"validate function should throw ValidationError when validation fails","status":"passed","title":"should throw ValidationError when validation fails","duration":0.32224999999925785,"failureMessages":[],"meta":{}},{"ancestorTitles":["validate function"],"fullName":"validate function should handle complex nested validation","status":"passed","title":"should handle complex nested validation","duration":0.7489590000004682,"failureMessages":[],"meta":{}}],"startTime":1752211153372,"endTime":1752211153391.749,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/shared/src/__tests__/validation.test.ts"},{"assertionResults":[{"ancestorTitles":["LoginForm Component","Authentication State"],"fullName":"LoginForm Component Authentication State should redirect to dashboard if already authenticated","status":"passed","title":"should redirect to dashboard if already authenticated","duration":21.61816699999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["LoginForm Component","Authentication State"],"fullName":"LoginForm Component Authentication State should render form if not authenticated","status":"passed","title":"should render form if not authenticated","duration":13.39408400000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["LoginForm Component","Mock Verification"],"fullName":"LoginForm Component Mock Verification should have properly mocked auth functions","status":"passed","title":"should have properly mocked auth functions","duration":0.222582999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["LoginForm Component","Mock Verification"],"fullName":"LoginForm Component Mock Verification should call login when invoked","status":"passed","title":"should call login when invoked","duration":1.4456250000000637,"failureMessages":[],"meta":{}}],"startTime":1752211157387,"endTime":1752211157424.4456,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/client/src/__tests__/components/LoginForm.test.tsx"},{"assertionResults":[{"ancestorTitles":["Navigation Component","Unauthenticated State"],"fullName":"Navigation Component Unauthenticated State should render navigation items even when user is not authenticated","status":"passed","title":"should render navigation items even when user is not authenticated","duration":19.460417000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Authenticated State"],"fullName":"Navigation Component Authenticated State should render navigation items when authenticated","status":"passed","title":"should render navigation items when authenticated","duration":3.951999999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Authenticated State"],"fullName":"Navigation Component Authenticated State should render user menu button","status":"passed","title":"should render user menu button","duration":9.498000000000047,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Authenticated State"],"fullName":"Navigation Component Authenticated State should render navigation links with correct hrefs","status":"passed","title":"should render navigation links with correct hrefs","duration":7.9249999999999545,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Authenticated State"],"fullName":"Navigation Component Authenticated State should highlight active navigation item","status":"passed","title":"should highlight active navigation item","duration":4.60941600000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Authenticated State"],"fullName":"Navigation Component Authenticated State should render mobile menu button","status":"passed","title":"should render mobile menu button","duration":3.2863340000001244,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Authenticated State"],"fullName":"Navigation Component Authenticated State should render user menu button for interaction","status":"passed","title":"should render user menu button for interaction","duration":3.0225419999999303,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Loading State"],"fullName":"Navigation Component Loading State should handle loading state appropriately","status":"passed","title":"should handle loading state appropriately","duration":2.5499159999999392,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Accessibility"],"fullName":"Navigation Component Accessibility should have proper ARIA labels for navigation","status":"passed","title":"should have proper ARIA labels for navigation","duration":4.9090419999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Accessibility"],"fullName":"Navigation Component Accessibility should have proper focus management","status":"passed","title":"should have proper focus management","duration":12.386416999999938,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Accessibility"],"fullName":"Navigation Component Accessibility should support keyboard navigation","status":"passed","title":"should support keyboard navigation","duration":12.774625000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Logo and Branding"],"fullName":"Navigation Component Logo and Branding should display logo or brand name","status":"passed","title":"should display logo or brand name","duration":10.319707999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Logo and Branding"],"fullName":"Navigation Component Logo and Branding should link logo to dashboard page","status":"passed","title":"should link logo to dashboard page","duration":9.295457999999826,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Active Route Highlighting"],"fullName":"Navigation Component Active Route Highlighting should highlight recipes page when on recipes route","status":"passed","title":"should highlight recipes page when on recipes route","duration":4.401249999999891,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Active Route Highlighting"],"fullName":"Navigation Component Active Route Highlighting should highlight add recipe page when on add recipe route","status":"passed","title":"should highlight add recipe page when on add recipe route","duration":4.127082999999857,"failureMessages":[],"meta":{}}],"startTime":1752211155925,"endTime":1752211156038.1272,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/client/src/__tests__/components/Navigation.test.tsx"},{"assertionResults":[{"ancestorTitles":["useAuth Hook","Initial State"],"fullName":"useAuth Hook Initial State should initialize with null user and loading state","status":"passed","title":"should initialize with null user and loading state","duration":17.04225000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Initial State"],"fullName":"useAuth Hook Initial State should restore user from storage if authenticated","status":"passed","title":"should restore user from storage if authenticated","duration":54.74108399999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Initial State"],"fullName":"useAuth Hook Initial State should clear auth if token is invalid","status":"passed","title":"should clear auth if token is invalid","duration":54.799999999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Login"],"fullName":"useAuth Hook Login should login successfully and navigate to dashboard","status":"passed","title":"should login successfully and navigate to dashboard","duration":3.1937920000000304,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Login"],"fullName":"useAuth Hook Login should handle login errors","status":"passed","title":"should handle login errors","duration":2.9623330000001715,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Login"],"fullName":"useAuth Hook Login should set loading state during login","status":"passed","title":"should set loading state during login","duration":58.98745800000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Register"],"fullName":"useAuth Hook Register should register successfully and navigate to dashboard","status":"passed","title":"should register successfully and navigate to dashboard","duration":5.122165999999879,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Register"],"fullName":"useAuth Hook Register should handle registration errors","status":"passed","title":"should handle registration errors","duration":2.649791999999934,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Logout"],"fullName":"useAuth Hook Logout should logout successfully and navigate to login","status":"passed","title":"should logout successfully and navigate to login","duration":4.008542000000034,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Logout"],"fullName":"useAuth Hook Logout should handle logout errors gracefully","status":"passed","title":"should handle logout errors gracefully","duration":5.794332999999824,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Profile Update"],"fullName":"useAuth Hook Profile Update should update profile successfully","status":"passed","title":"should update profile successfully","duration":10.355583000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Profile Update"],"fullName":"useAuth Hook Profile Update should handle profile update errors","status":"passed","title":"should handle profile update errors","duration":4.299665999999888,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Password Change"],"fullName":"useAuth Hook Password Change should change password successfully","status":"passed","title":"should change password successfully","duration":1.9874580000000606,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Password Change"],"fullName":"useAuth Hook Password Change should handle password change errors","status":"passed","title":"should handle password change errors","duration":2.642333000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Refresh User"],"fullName":"useAuth Hook Refresh User should refresh user data successfully","status":"passed","title":"should refresh user data successfully","duration":2.309624999999869,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Refresh User"],"fullName":"useAuth Hook Refresh User should handle refresh user errors","status":"passed","title":"should handle refresh user errors","duration":3.5756249999999454,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Error Handling"],"fullName":"useAuth Hook Error Handling should throw error when used outside AuthProvider","status":"passed","title":"should throw error when used outside AuthProvider","duration":4.297124999999824,"failureMessages":[],"meta":{}}],"startTime":1752211155798,"endTime":1752211156037.297,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/client/src/__tests__/hooks/useAuth.test.tsx"},{"assertionResults":[{"ancestorTitles":["useDebounce Hook","Basic Functionality"],"fullName":"useDebounce Hook Basic Functionality should return initial value immediately","status":"passed","title":"should return initial value immediately","duration":6.879458999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce Hook","Basic Functionality"],"fullName":"useDebounce Hook Basic Functionality should debounce value changes","status":"passed","title":"should debounce value changes","duration":2.684915999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce Hook","Basic Functionality"],"fullName":"useDebounce Hook Basic Functionality should reset debounce timer on rapid changes","status":"passed","title":"should reset debounce timer on rapid changes","duration":2.181250000000034,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce Hook","Different Data Types"],"fullName":"useDebounce Hook Different Data Types should work with strings","status":"passed","title":"should work with strings","duration":0.8771669999999858,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce Hook","Different Data Types"],"fullName":"useDebounce Hook Different Data Types should work with numbers","status":"passed","title":"should work with numbers","duration":0.7488749999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce Hook","Different Data Types"],"fullName":"useDebounce Hook Different Data Types should work with objects","status":"passed","title":"should work with objects","duration":0.9084589999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce Hook","Different Data Types"],"fullName":"useDebounce Hook Different Data Types should work with arrays","status":"passed","title":"should work with arrays","duration":0.6024589999999534,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce Hook","Different Data Types"],"fullName":"useDebounce Hook Different Data Types should work with boolean values","status":"passed","title":"should work with boolean values","duration":0.43325000000004366,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce Hook","Different Data Types"],"fullName":"useDebounce Hook Different Data Types should work with null and undefined","status":"passed","title":"should work with null and undefined","duration":1.3417909999999438,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce Hook","Delay Variations"],"fullName":"useDebounce Hook Delay Variations should work with different delay values","status":"passed","title":"should work with different delay values","duration":0.7322080000000142,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce Hook","Delay Variations"],"fullName":"useDebounce Hook Delay Variations should work with zero delay","status":"passed","title":"should work with zero delay","duration":0.4877920000000131,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce Hook","Delay Variations"],"fullName":"useDebounce Hook Delay Variations should update delay dynamically","status":"passed","title":"should update delay dynamically","duration":0.4154160000000502,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce Hook","Cleanup"],"fullName":"useDebounce Hook Cleanup should cleanup timer on unmount","status":"passed","title":"should cleanup timer on unmount","duration":0.3704579999999851,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce Hook","Cleanup"],"fullName":"useDebounce Hook Cleanup should handle multiple value changes before cleanup","status":"passed","title":"should handle multiple value changes before cleanup","duration":0.41666699999996126,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce Hook","Edge Cases"],"fullName":"useDebounce Hook Edge Cases should handle same value changes","status":"passed","title":"should handle same value changes","duration":0.34000000000003183,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce Hook","Edge Cases"],"fullName":"useDebounce Hook Edge Cases should handle rapid same value changes","status":"passed","title":"should handle rapid same value changes","duration":0.4555000000000291,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce Hook","Edge Cases"],"fullName":"useDebounce Hook Edge Cases should handle different types correctly","status":"passed","title":"should handle different types correctly","duration":0.6056250000000318,"failureMessages":[],"meta":{}}],"startTime":1752211156559,"endTime":1752211156579.6057,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/client/src/__tests__/hooks/useDebounce.test.tsx"},{"assertionResults":[{"ancestorTitles":["useLocalStorage Hook","Basic Functionality"],"fullName":"useLocalStorage Hook Basic Functionality should return initial value when no stored value exists","status":"passed","title":"should return initial value when no stored value exists","duration":7.556707999999958,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage Hook","Basic Functionality"],"fullName":"useLocalStorage Hook Basic Functionality should return stored value when it exists","status":"passed","title":"should return stored value when it exists","duration":1.3275830000000042,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage Hook","Basic Functionality"],"fullName":"useLocalStorage Hook Basic Functionality should store value in localStorage when setValue is called","status":"passed","title":"should store value in localStorage when setValue is called","duration":1.5971250000000055,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage Hook","Basic Functionality"],"fullName":"useLocalStorage Hook Basic Functionality should update localStorage when value changes","status":"passed","title":"should update localStorage when value changes","duration":1.3670419999999694,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage Hook","Data Types"],"fullName":"useLocalStorage Hook Data Types should work with strings","status":"passed","title":"should work with strings","duration":0.9750830000000406,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage Hook","Data Types"],"fullName":"useLocalStorage Hook Data Types should work with numbers","status":"passed","title":"should work with numbers","duration":0.7849159999999529,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage Hook","Data Types"],"fullName":"useLocalStorage Hook Data Types should work with objects","status":"passed","title":"should work with objects","duration":0.5998340000001008,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage Hook","Data Types"],"fullName":"useLocalStorage Hook Data Types should work with arrays","status":"passed","title":"should work with arrays","duration":0.4257910000000038,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage Hook","Data Types"],"fullName":"useLocalStorage Hook Data Types should work with boolean values","status":"passed","title":"should work with boolean values","duration":1.2129999999999654,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage Hook","Data Types"],"fullName":"useLocalStorage Hook Data Types should work with null values","status":"passed","title":"should work with null values","duration":0.5123749999999063,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage Hook","Function Updates"],"fullName":"useLocalStorage Hook Function Updates should support function updates","status":"passed","title":"should support function updates","duration":0.37687499999992724,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage Hook","Function Updates"],"fullName":"useLocalStorage Hook Function Updates should handle complex function updates","status":"passed","title":"should handle complex function updates","duration":0.4626660000000129,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage Hook","Error Handling"],"fullName":"useLocalStorage Hook Error Handling should handle localStorage.getItem errors","status":"passed","title":"should handle localStorage.getItem errors","duration":6.266707999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage Hook","Error Handling"],"fullName":"useLocalStorage Hook Error Handling should handle localStorage.setItem errors","status":"passed","title":"should handle localStorage.setItem errors","duration":2.096457999999984,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage Hook","Error Handling"],"fullName":"useLocalStorage Hook Error Handling should handle JSON parsing errors","status":"passed","title":"should handle JSON parsing errors","duration":0.9802909999999656,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage Hook","Error Handling"],"fullName":"useLocalStorage Hook Error Handling should handle localStorage being unavailable","status":"passed","title":"should handle localStorage being unavailable","duration":0.9412500000000819,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage Hook","Key Changes"],"fullName":"useLocalStorage Hook Key Changes should handle key changes","status":"passed","title":"should handle key changes","duration":0.42945799999995415,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage Hook","Key Changes"],"fullName":"useLocalStorage Hook Key Changes should use default value when key changes to non-existent key","status":"passed","title":"should use default value when key changes to non-existent key","duration":0.35533299999997325,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage Hook","Initial Value Function"],"fullName":"useLocalStorage Hook Initial Value Function should call initial value function when no stored value exists","status":"passed","title":"should call initial value function when no stored value exists","duration":0.5525000000000091,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage Hook","Initial Value Function"],"fullName":"useLocalStorage Hook Initial Value Function should not call initial value function when stored value exists","status":"passed","title":"should not call initial value function when stored value exists","duration":0.4138750000000755,"failureMessages":[],"meta":{}}],"startTime":1752211157893,"endTime":1752211157923.4138,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/client/src/__tests__/hooks/useLocalStorage.test.tsx"},{"assertionResults":[{"ancestorTitles":["ApiClient","Authentication"],"fullName":"ApiClient Authentication should return true when authenticated","status":"passed","title":"should return true when authenticated","duration":1.2318329999999378,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Authentication"],"fullName":"ApiClient Authentication should return false when not authenticated","status":"passed","title":"should return false when not authenticated","duration":0.14554199999997763,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Authentication"],"fullName":"ApiClient Authentication should get stored user from localStorage","status":"passed","title":"should get stored user from localStorage","duration":0.4107920000000149,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Authentication"],"fullName":"ApiClient Authentication should return null when no user is stored","status":"passed","title":"should return null when no user is stored","duration":0.1292079999999487,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Authentication"],"fullName":"ApiClient Authentication should clear auth data","status":"passed","title":"should clear auth data","duration":0.600667000000044,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Recipe Methods"],"fullName":"ApiClient Recipe Methods should call getRecipes with correct parameters","status":"passed","title":"should call getRecipes with correct parameters","duration":0.17133400000000165,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Recipe Methods"],"fullName":"ApiClient Recipe Methods should call getRecipe with correct ID","status":"passed","title":"should call getRecipe with correct ID","duration":0.3433750000000373,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Recipe Methods"],"fullName":"ApiClient Recipe Methods should call createRecipe with recipe data","status":"passed","title":"should call createRecipe with recipe data","duration":0.26233400000000984,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Recipe Methods"],"fullName":"ApiClient Recipe Methods should call updateRecipe with ID and data","status":"passed","title":"should call updateRecipe with ID and data","duration":0.8435829999999669,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Recipe Methods"],"fullName":"ApiClient Recipe Methods should call deleteRecipe with ID","status":"passed","title":"should call deleteRecipe with ID","duration":0.2017919999999549,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Auth Methods"],"fullName":"ApiClient Auth Methods should call login with credentials","status":"passed","title":"should call login with credentials","duration":0.17237500000010186,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Auth Methods"],"fullName":"ApiClient Auth Methods should call register with user data","status":"passed","title":"should call register with user data","duration":0.14250000000004093,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Auth Methods"],"fullName":"ApiClient Auth Methods should call logout","status":"passed","title":"should call logout","duration":0.07549999999991996,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Auth Methods"],"fullName":"ApiClient Auth Methods should call getCurrentUser","status":"passed","title":"should call getCurrentUser","duration":0.07008300000006784,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Auth Methods"],"fullName":"ApiClient Auth Methods should call getUserStats","status":"passed","title":"should call getUserStats","duration":0.06920800000000327,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Utility Methods"],"fullName":"ApiClient Utility Methods should call searchRecipes with parameters","status":"passed","title":"should call searchRecipes with parameters","duration":0.08312499999999545,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Utility Methods"],"fullName":"ApiClient Utility Methods should call getRecipeCategories","status":"passed","title":"should call getRecipeCategories","duration":0.07150000000001455,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Utility Methods"],"fullName":"ApiClient Utility Methods should call uploadImage with file","status":"passed","title":"should call uploadImage with file","duration":0.19658300000003237,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Utility Methods"],"fullName":"ApiClient Utility Methods should call getUserRecipes","status":"passed","title":"should call getUserRecipes","duration":0.0741249999999809,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Utility Methods"],"fullName":"ApiClient Utility Methods should call updateProfile","status":"passed","title":"should call updateProfile","duration":0.07020799999997962,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Utility Methods"],"fullName":"ApiClient Utility Methods should call changePassword","status":"passed","title":"should call changePassword","duration":0.06654200000002675,"failureMessages":[],"meta":{}}],"startTime":1752211157315,"endTime":1752211157321.1965,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/client/src/__tests__/services/api.test.ts"},{"assertionResults":[{"ancestorTitles":["Array Utilities","removeDuplicates"],"fullName":"Array Utilities removeDuplicates should remove duplicate values","status":"passed","title":"should remove duplicate values","duration":2.113207999998849,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","removeDuplicates"],"fullName":"Array Utilities removeDuplicates should handle empty array","status":"passed","title":"should handle empty array","duration":0.12050000000090222,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","removeDuplicates"],"fullName":"Array Utilities removeDuplicates should handle array with no duplicates","status":"passed","title":"should handle array with no duplicates","duration":0.1369169999998121,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","removeDuplicates"],"fullName":"Array Utilities removeDuplicates should handle array with all duplicates","status":"passed","title":"should handle array with all duplicates","duration":1.1357920000009472,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","removeDuplicates"],"fullName":"Array Utilities removeDuplicates should handle mixed data types","status":"passed","title":"should handle mixed data types","duration":0.7902090000006865,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","groupBy"],"fullName":"Array Utilities groupBy should group objects by key","status":"passed","title":"should group objects by key","duration":0.5055409999986296,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","groupBy"],"fullName":"Array Utilities groupBy should handle empty array","status":"passed","title":"should handle empty array","duration":0.14995900000030815,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","groupBy"],"fullName":"Array Utilities groupBy should handle single item","status":"passed","title":"should handle single item","duration":0.7501250000004802,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","groupBy"],"fullName":"Array Utilities groupBy should handle numeric keys","status":"passed","title":"should handle numeric keys","duration":0.36537499999940337,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","sortBy"],"fullName":"Array Utilities sortBy should sort by key in ascending order","status":"passed","title":"should sort by key in ascending order","duration":0.6361249999990832,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","sortBy"],"fullName":"Array Utilities sortBy should sort by key in descending order","status":"passed","title":"should sort by key in descending order","duration":0.20424999999886495,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","sortBy"],"fullName":"Array Utilities sortBy should handle empty array","status":"passed","title":"should handle empty array","duration":0.05795799999941664,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","sortBy"],"fullName":"Array Utilities sortBy should not mutate original array","status":"passed","title":"should not mutate original array","duration":0.07824999999866122,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","shuffle"],"fullName":"Array Utilities shuffle should return array with same elements","status":"passed","title":"should return array with same elements","duration":0.5473750000001019,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","shuffle"],"fullName":"Array Utilities shuffle should not mutate original array","status":"passed","title":"should not mutate original array","duration":0.16258300000117742,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","shuffle"],"fullName":"Array Utilities shuffle should handle empty array","status":"passed","title":"should handle empty array","duration":0.04258300000037707,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","shuffle"],"fullName":"Array Utilities shuffle should handle single item","status":"passed","title":"should handle single item","duration":0.04799999999886495,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","chunk"],"fullName":"Array Utilities chunk should split array into chunks","status":"passed","title":"should split array into chunks","duration":0.09791600000062317,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","chunk"],"fullName":"Array Utilities chunk should handle chunk size larger than array","status":"passed","title":"should handle chunk size larger than array","duration":0.04741699999976845,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","chunk"],"fullName":"Array Utilities chunk should handle empty array","status":"passed","title":"should handle empty array","duration":0.044332999999824096,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","chunk"],"fullName":"Array Utilities chunk should handle chunk size of 1","status":"passed","title":"should handle chunk size of 1","duration":0.054500000000189175,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","union"],"fullName":"Array Utilities union should return unique values from multiple arrays","status":"passed","title":"should return unique values from multiple arrays","duration":0.057291999999506515,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","union"],"fullName":"Array Utilities union should handle empty arrays","status":"passed","title":"should handle empty arrays","duration":0.039042000000335975,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","union"],"fullName":"Array Utilities union should handle single array","status":"passed","title":"should handle single array","duration":0.04308400000081747,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","union"],"fullName":"Array Utilities union should handle no arrays","status":"passed","title":"should handle no arrays","duration":0.04158299999835435,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","intersection"],"fullName":"Array Utilities intersection should return common elements","status":"passed","title":"should return common elements","duration":0.6797920000008162,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","intersection"],"fullName":"Array Utilities intersection should handle no common elements","status":"passed","title":"should handle no common elements","duration":0.2816670000011072,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","intersection"],"fullName":"Array Utilities intersection should handle empty arrays","status":"passed","title":"should handle empty arrays","duration":0.08254200000010314,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","intersection"],"fullName":"Array Utilities intersection should handle single array","status":"passed","title":"should handle single array","duration":0.18895899999915855,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","difference"],"fullName":"Array Utilities difference should return elements in first array but not second","status":"passed","title":"should return elements in first array but not second","duration":0.2814589999998134,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","difference"],"fullName":"Array Utilities difference should handle no differences","status":"passed","title":"should handle no differences","duration":0.13654099999985192,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","difference"],"fullName":"Array Utilities difference should handle empty arrays","status":"passed","title":"should handle empty arrays","duration":0.7195410000003903,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","findLast"],"fullName":"Array Utilities findLast should find last matching element","status":"passed","title":"should find last matching element","duration":0.17687500000101863,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","findLast"],"fullName":"Array Utilities findLast should return undefined if no match","status":"passed","title":"should return undefined if no match","duration":0.06266699999832781,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","findLast"],"fullName":"Array Utilities findLast should handle empty array","status":"passed","title":"should handle empty array","duration":0.04741699999976845,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","findLast"],"fullName":"Array Utilities findLast should work with complex objects","status":"passed","title":"should work with complex objects","duration":0.11379200000010314,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","isEmpty"],"fullName":"Array Utilities isEmpty should identify empty arrays","status":"passed","title":"should identify empty arrays","duration":0.07229200000074343,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","isEmpty"],"fullName":"Array Utilities isEmpty should identify non-empty arrays","status":"passed","title":"should identify non-empty arrays","duration":0.07837499999914144,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","getRandomItem"],"fullName":"Array Utilities getRandomItem should return item from array","status":"passed","title":"should return item from array","duration":0.23354099999960454,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","getRandomItem"],"fullName":"Array Utilities getRandomItem should return undefined for empty array","status":"passed","title":"should return undefined for empty array","duration":0.03974999999991269,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","getRandomItem"],"fullName":"Array Utilities getRandomItem should return single item from single-item array","status":"passed","title":"should return single item from single-item array","duration":0.04862499999944703,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","moveItem"],"fullName":"Array Utilities moveItem should move item to new position","status":"passed","title":"should move item to new position","duration":0.090290999998615,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","moveItem"],"fullName":"Array Utilities moveItem should handle invalid indices","status":"passed","title":"should handle invalid indices","duration":0.08812500000021828,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","moveItem"],"fullName":"Array Utilities moveItem should not mutate original array","status":"passed","title":"should not mutate original array","duration":0.07029200000033597,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","moveItem"],"fullName":"Array Utilities moveItem should handle empty array","status":"passed","title":"should handle empty array","duration":0.04570799999964947,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","flatten"],"fullName":"Array Utilities flatten should flatten nested arrays","status":"passed","title":"should flatten nested arrays","duration":0.08995800000047893,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","flatten"],"fullName":"Array Utilities flatten should handle already flat arrays","status":"passed","title":"should handle already flat arrays","duration":0.04662500000085856,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","flatten"],"fullName":"Array Utilities flatten should handle empty arrays","status":"passed","title":"should handle empty arrays","duration":0.05720800000017334,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","flatten"],"fullName":"Array Utilities flatten should handle deeply nested arrays","status":"passed","title":"should handle deeply nested arrays","duration":0.04637499999989814,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","countOccurrences"],"fullName":"Array Utilities countOccurrences should count occurrences of each item","status":"passed","title":"should count occurrences of each item","duration":0.07625000000007276,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","countOccurrences"],"fullName":"Array Utilities countOccurrences should handle strings","status":"passed","title":"should handle strings","duration":0.05858299999999872,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","countOccurrences"],"fullName":"Array Utilities countOccurrences should handle empty array","status":"passed","title":"should handle empty array","duration":0.05033300000104646,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","countOccurrences"],"fullName":"Array Utilities countOccurrences should handle single item","status":"passed","title":"should handle single item","duration":0.04425000000082946,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array Utilities","countOccurrences"],"fullName":"Array Utilities countOccurrences should handle mixed types","status":"passed","title":"should handle mixed types","duration":0.04729199999928824,"failureMessages":[],"meta":{}}],"startTime":1752211152960,"endTime":1752211153135.0903,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/shared/src/__tests__/utils/array.test.ts"},{"assertionResults":[{"ancestorTitles":["Date Utilities","formatDate"],"fullName":"Date Utilities formatDate should format date without time","status":"passed","title":"should format date without time","duration":19.85933399999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","formatDate"],"fullName":"Date Utilities formatDate should format date with time","status":"passed","title":"should format date with time","duration":0.2219159999999647,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","formatDate"],"fullName":"Date Utilities formatDate should format date with different formats","status":"passed","title":"should format date with different formats","duration":0.303957999999966,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","formatDate"],"fullName":"Date Utilities formatDate should handle invalid dates","status":"passed","title":"should handle invalid dates","duration":0.11683300000004238,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","formatDateShort"],"fullName":"Date Utilities formatDateShort should format date as MM/DD/YYYY","status":"passed","title":"should format date as MM/DD/YYYY","duration":0.10845899999981157,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","formatDateShort"],"fullName":"Date Utilities formatDateShort should handle string dates","status":"passed","title":"should handle string dates","duration":0.778374999999869,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","formatDateShort"],"fullName":"Date Utilities formatDateShort should handle invalid dates","status":"passed","title":"should handle invalid dates","duration":0.16887499999984357,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","formatDateRelative"],"fullName":"Date Utilities formatDateRelative should format recent dates","status":"passed","title":"should format recent dates","duration":0.9157920000000104,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","formatDateRelative"],"fullName":"Date Utilities formatDateRelative should handle \"just now\" for very recent dates","status":"passed","title":"should handle \"just now\" for very recent dates","duration":0.5648750000000291,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","formatDateRelative"],"fullName":"Date Utilities formatDateRelative should handle singular forms correctly","status":"passed","title":"should handle singular forms correctly","duration":0.2593339999998534,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","formatDateRelative"],"fullName":"Date Utilities formatDateRelative should handle hours correctly","status":"passed","title":"should handle hours correctly","duration":0.2780410000000302,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","formatDateRelative"],"fullName":"Date Utilities formatDateRelative should handle days correctly","status":"passed","title":"should handle days correctly","duration":0.13279099999999744,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","formatDateRelative"],"fullName":"Date Utilities formatDateRelative should handle invalid dates","status":"passed","title":"should handle invalid dates","duration":0.11870799999996962,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","formatDuration"],"fullName":"Date Utilities formatDuration should format duration in minutes","status":"passed","title":"should format duration in minutes","duration":0.19620800000006966,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","formatDuration"],"fullName":"Date Utilities formatDuration should format duration in hours","status":"passed","title":"should format duration in hours","duration":0.13491700000008677,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","formatDuration"],"fullName":"Date Utilities formatDuration should format duration in hours and minutes","status":"passed","title":"should format duration in hours and minutes","duration":0.13645900000005895,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","formatDuration"],"fullName":"Date Utilities formatDuration should handle zero duration","status":"passed","title":"should handle zero duration","duration":0.2408339999999498,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","isToday"],"fullName":"Date Utilities isToday should return true for today","status":"passed","title":"should return true for today","duration":0.46079200000008314,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","isToday"],"fullName":"Date Utilities isToday should return false for yesterday","status":"passed","title":"should return false for yesterday","duration":0.2223750000000564,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","isToday"],"fullName":"Date Utilities isToday should return false for tomorrow","status":"passed","title":"should return false for tomorrow","duration":0.1295829999999114,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","isToday"],"fullName":"Date Utilities isToday should handle string dates","status":"passed","title":"should handle string dates","duration":0.2177919999999176,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","isThisWeek"],"fullName":"Date Utilities isThisWeek should return true for dates in current week","status":"passed","title":"should return true for dates in current week","duration":0.09083299999997507,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","isThisWeek"],"fullName":"Date Utilities isThisWeek should return false for dates outside current week","status":"passed","title":"should return false for dates outside current week","duration":0.04616699999996854,"failureMessages":[],"meta":{}},{"ancestorTitles":["Date Utilities","isThisWeek"],"fullName":"Date Utilities isThisWeek should handle string dates","status":"passed","title":"should handle string dates","duration":0.04291699999998855,"failureMessages":[],"meta":{}}],"startTime":1752211154677,"endTime":1752211154704.0908,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/shared/src/__tests__/utils/date.test.ts"},{"assertionResults":[{"ancestorTitles":["String Utilities","capitalize"],"fullName":"String Utilities capitalize should capitalize first letter","status":"passed","title":"should capitalize first letter","duration":0.7182920000000195,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","capitalize"],"fullName":"String Utilities capitalize should handle empty string","status":"passed","title":"should handle empty string","duration":0.09133299999996325,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","capitalize"],"fullName":"String Utilities capitalize should handle single character","status":"passed","title":"should handle single character","duration":0.14391699999998764,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","capitalize"],"fullName":"String Utilities capitalize should only capitalize first letter","status":"passed","title":"should only capitalize first letter","duration":0.13045899999997346,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","capitalize"],"fullName":"String Utilities capitalize should handle special characters","status":"passed","title":"should handle special characters","duration":0.1296669999999267,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","toTitleCase"],"fullName":"String Utilities toTitleCase should convert to title case","status":"passed","title":"should convert to title case","duration":0.20258400000000165,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","toTitleCase"],"fullName":"String Utilities toTitleCase should handle single word","status":"passed","title":"should handle single word","duration":0.05583400000000438,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","toTitleCase"],"fullName":"String Utilities toTitleCase should handle empty string","status":"passed","title":"should handle empty string","duration":0.07937500000002728,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","toTitleCase"],"fullName":"String Utilities toTitleCase should handle mixed case","status":"passed","title":"should handle mixed case","duration":0.15674999999998818,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","toTitleCase"],"fullName":"String Utilities toTitleCase should handle special characters","status":"passed","title":"should handle special characters","duration":0.080791999999974,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","toKebabCase"],"fullName":"String Utilities toKebabCase should convert to kebab case","status":"passed","title":"should convert to kebab case","duration":0.1570000000000391,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","toKebabCase"],"fullName":"String Utilities toKebabCase should handle camelCase","status":"passed","title":"should handle camelCase","duration":0.05454199999996945,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","toKebabCase"],"fullName":"String Utilities toKebabCase should handle underscores","status":"passed","title":"should handle underscores","duration":0.042291999999974905,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","toKebabCase"],"fullName":"String Utilities toKebabCase should handle multiple spaces","status":"passed","title":"should handle multiple spaces","duration":0.038165999999932865,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","toKebabCase"],"fullName":"String Utilities toKebabCase should handle empty string","status":"passed","title":"should handle empty string","duration":0.03391700000008768,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","toCamelCase"],"fullName":"String Utilities toCamelCase should convert to camel case","status":"passed","title":"should convert to camel case","duration":0.1079579999999396,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","toCamelCase"],"fullName":"String Utilities toCamelCase should handle kebab case","status":"passed","title":"should handle kebab case","duration":0.050041000000078384,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","toCamelCase"],"fullName":"String Utilities toCamelCase should handle underscores","status":"passed","title":"should handle underscores","duration":0.03633400000001075,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","toCamelCase"],"fullName":"String Utilities toCamelCase should handle mixed separators","status":"passed","title":"should handle mixed separators","duration":0.03866600000003473,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","toCamelCase"],"fullName":"String Utilities toCamelCase should handle empty string","status":"passed","title":"should handle empty string","duration":0.034708000000023276,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","truncate"],"fullName":"String Utilities truncate should truncate long strings","status":"passed","title":"should truncate long strings","duration":0.06533400000000711,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","truncate"],"fullName":"String Utilities truncate should handle custom suffix","status":"passed","title":"should handle custom suffix","duration":0.036207999999987805,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","truncate"],"fullName":"String Utilities truncate should handle empty string","status":"passed","title":"should handle empty string","duration":0.03304199999990942,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","truncate"],"fullName":"String Utilities truncate should handle zero length","status":"passed","title":"should handle zero length","duration":0.03524999999990541,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","truncate"],"fullName":"String Utilities truncate should handle negative length","status":"passed","title":"should handle negative length","duration":0.03516700000000128,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","stripHtml"],"fullName":"String Utilities stripHtml should remove HTML tags","status":"passed","title":"should remove HTML tags","duration":0.3016250000000582,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","stripHtml"],"fullName":"String Utilities stripHtml should handle self-closing tags","status":"passed","title":"should handle self-closing tags","duration":0.07375000000001819,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","stripHtml"],"fullName":"String Utilities stripHtml should handle nested tags","status":"passed","title":"should handle nested tags","duration":0.042165999999951964,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","stripHtml"],"fullName":"String Utilities stripHtml should handle empty string","status":"passed","title":"should handle empty string","duration":0.040709000000106244,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","stripHtml"],"fullName":"String Utilities stripHtml should handle text without HTML","status":"passed","title":"should handle text without HTML","duration":0.03704199999992852,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","slugify"],"fullName":"String Utilities slugify should create valid slugs","status":"passed","title":"should create valid slugs","duration":0.18554200000005494,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","slugify"],"fullName":"String Utilities slugify should handle special characters","status":"passed","title":"should handle special characters","duration":0.05520899999999074,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","slugify"],"fullName":"String Utilities slugify should handle accented characters","status":"passed","title":"should handle accented characters","duration":0.47795799999994415,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","slugify"],"fullName":"String Utilities slugify should handle numbers","status":"passed","title":"should handle numbers","duration":0.04462499999999636,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","slugify"],"fullName":"String Utilities slugify should handle empty string","status":"passed","title":"should handle empty string","duration":0.03729199999997945,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","slugify"],"fullName":"String Utilities slugify should handle multiple spaces and dashes","status":"passed","title":"should handle multiple spaces and dashes","duration":0.04129199999999855,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","getInitials"],"fullName":"String Utilities getInitials should get initials from name","status":"passed","title":"should get initials from name","duration":0.1037499999999909,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","getInitials"],"fullName":"String Utilities getInitials should handle single name","status":"passed","title":"should handle single name","duration":0.03837500000008731,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","getInitials"],"fullName":"String Utilities getInitials should handle empty string","status":"passed","title":"should handle empty string","duration":0.03554200000007768,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","getInitials"],"fullName":"String Utilities getInitials should handle extra spaces","status":"passed","title":"should handle extra spaces","duration":0.03666699999996581,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","getInitials"],"fullName":"String Utilities getInitials should handle lowercase names","status":"passed","title":"should handle lowercase names","duration":0.054666999999994914,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","getInitials"],"fullName":"String Utilities getInitials should limit to 3 initials maximum","status":"passed","title":"should limit to 3 initials maximum","duration":0.7128750000000537,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","isValidEmail"],"fullName":"String Utilities isValidEmail should validate correct emails","status":"passed","title":"should validate correct emails","duration":0.20500000000004093,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","isValidEmail"],"fullName":"String Utilities isValidEmail should reject invalid emails","status":"passed","title":"should reject invalid emails","duration":0.08537499999999909,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","isValidEmail"],"fullName":"String Utilities isValidEmail should handle empty string","status":"passed","title":"should handle empty string","duration":0.04670799999996689,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","isValidEmail"],"fullName":"String Utilities isValidEmail should handle whitespace","status":"passed","title":"should handle whitespace","duration":0.05379199999993034,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","formatNumber"],"fullName":"String Utilities formatNumber should format numbers with commas","status":"passed","title":"should format numbers with commas","duration":18.363750000000095,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","formatNumber"],"fullName":"String Utilities formatNumber should handle decimal numbers","status":"passed","title":"should handle decimal numbers","duration":0.09208400000011352,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","formatNumber"],"fullName":"String Utilities formatNumber should handle negative numbers","status":"passed","title":"should handle negative numbers","duration":0.06533299999978226,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","formatNumber"],"fullName":"String Utilities formatNumber should handle zero","status":"passed","title":"should handle zero","duration":0.060124999999970896,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","formatNumber"],"fullName":"String Utilities formatNumber should handle small numbers","status":"passed","title":"should handle small numbers","duration":0.057042000000137705,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","generateRandomString"],"fullName":"String Utilities generateRandomString should generate string of specified length","status":"passed","title":"should generate string of specified length","duration":0.7222920000001523,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","generateRandomString"],"fullName":"String Utilities generateRandomString should generate different strings","status":"passed","title":"should generate different strings","duration":0.32762499999989814,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","generateRandomString"],"fullName":"String Utilities generateRandomString should handle zero length","status":"passed","title":"should handle zero length","duration":0.046832999999878666,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","generateRandomString"],"fullName":"String Utilities generateRandomString should only contain valid characters","status":"passed","title":"should only contain valid characters","duration":0.08533299999999144,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","isWhitespace"],"fullName":"String Utilities isWhitespace should identify whitespace strings","status":"passed","title":"should identify whitespace strings","duration":0.07312499999989086,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","isWhitespace"],"fullName":"String Utilities isWhitespace should identify non-whitespace strings","status":"passed","title":"should identify non-whitespace strings","duration":0.06091599999990649,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","countWords"],"fullName":"String Utilities countWords should count words correctly","status":"passed","title":"should count words correctly","duration":0.1121250000001055,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","countWords"],"fullName":"String Utilities countWords should handle single word","status":"passed","title":"should handle single word","duration":0.03970800000001873,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","countWords"],"fullName":"String Utilities countWords should handle empty string","status":"passed","title":"should handle empty string","duration":0.03637499999990723,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","countWords"],"fullName":"String Utilities countWords should handle multiple spaces","status":"passed","title":"should handle multiple spaces","duration":0.03658299999983683,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","countWords"],"fullName":"String Utilities countWords should handle leading/trailing spaces","status":"passed","title":"should handle leading/trailing spaces","duration":0.03399999999987813,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","escapeHtml"],"fullName":"String Utilities escapeHtml should escape HTML entities","status":"passed","title":"should escape HTML entities","duration":0.09024999999996908,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","escapeHtml"],"fullName":"String Utilities escapeHtml should handle quotes","status":"passed","title":"should handle quotes","duration":0.158916999999974,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","escapeHtml"],"fullName":"String Utilities escapeHtml should handle empty string","status":"passed","title":"should handle empty string","duration":0.1334999999999127,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","escapeHtml"],"fullName":"String Utilities escapeHtml should handle text without HTML","status":"passed","title":"should handle text without HTML","duration":0.06554199999982302,"failureMessages":[],"meta":{}},{"ancestorTitles":["String Utilities","escapeHtml"],"fullName":"String Utilities escapeHtml should handle multiple entities","status":"passed","title":"should handle multiple entities","duration":0.04383300000017698,"failureMessages":[],"meta":{}}],"startTime":1752211144052,"endTime":1752211144078.159,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/shared/src/__tests__/utils/string.test.ts"},{"assertionResults":[{"ancestorTitles":["Button Component","Basic Rendering"],"fullName":"Button Component Basic Rendering should render button with text","status":"passed","title":"should render button with text","duration":13.974249999999984,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","Basic Rendering"],"fullName":"Button Component Basic Rendering should render button with custom type","status":"passed","title":"should render button with custom type","duration":2.127207999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","Basic Rendering"],"fullName":"Button Component Basic Rendering should render disabled button","status":"passed","title":"should render disabled button","duration":1.6605839999999716,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","Variants"],"fullName":"Button Component Variants should render primary variant","status":"passed","title":"should render primary variant","duration":1.265333000000055,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","Variants"],"fullName":"Button Component Variants should render secondary variant","status":"passed","title":"should render secondary variant","duration":1.7957920000000058,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","Variants"],"fullName":"Button Component Variants should render danger variant","status":"passed","title":"should render danger variant","duration":0.8121250000000373,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","Variants"],"fullName":"Button Component Variants should render ghost variant","status":"passed","title":"should render ghost variant","duration":0.8917920000000095,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","Sizes"],"fullName":"Button Component Sizes should render small size","status":"passed","title":"should render small size","duration":0.904166000000032,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","Sizes"],"fullName":"Button Component Sizes should render medium size (default)","status":"passed","title":"should render medium size (default)","duration":1.8458750000000919,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","Sizes"],"fullName":"Button Component Sizes should render large size","status":"passed","title":"should render large size","duration":0.7791250000000218,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","States"],"fullName":"Button Component States should render loading state","status":"passed","title":"should render loading state","duration":1.7294579999999087,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","States"],"fullName":"Button Component States should show loading spinner when loading","status":"passed","title":"should show loading spinner when loading","duration":0.9336250000000064,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","States"],"fullName":"Button Component States should not be clickable when loading","status":"passed","title":"should not be clickable when loading","duration":1.310916999999904,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","Icons"],"fullName":"Button Component Icons should render with left icon","status":"passed","title":"should render with left icon","duration":0.6572079999999687,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","Icons"],"fullName":"Button Component Icons should render with right icon","status":"passed","title":"should render with right icon","duration":0.4189999999999827,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","Event Handling"],"fullName":"Button Component Event Handling should handle click events","status":"passed","title":"should handle click events","duration":1.7191669999999704,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","Event Handling"],"fullName":"Button Component Event Handling should not handle click events when disabled","status":"passed","title":"should not handle click events when disabled","duration":0.6428339999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","Custom Props"],"fullName":"Button Component Custom Props should accept custom className","status":"passed","title":"should accept custom className","duration":0.5705410000000484,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","Custom Props"],"fullName":"Button Component Custom Props should accept custom data attributes","status":"passed","title":"should accept custom data attributes","duration":0.3328750000000582,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","Custom Props"],"fullName":"Button Component Custom Props should accept ARIA attributes","status":"passed","title":"should accept ARIA attributes","duration":0.5302920000000313,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","Accessibility"],"fullName":"Button Component Accessibility should have proper role","status":"passed","title":"should have proper role","duration":0.4969170000000531,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","Accessibility"],"fullName":"Button Component Accessibility should be focusable","status":"passed","title":"should be focusable","duration":0.9291249999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Button Component","Accessibility"],"fullName":"Button Component Accessibility should not be focusable when disabled","status":"passed","title":"should not be focusable when disabled","duration":0.5653330000000096,"failureMessages":[],"meta":{}}],"startTime":1752211156591,"endTime":1752211156628.5654,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/client/src/__tests__/components/ui/Button.test.tsx"},{"assertionResults":[{"ancestorTitles":["Card Component","Basic Rendering"],"fullName":"Card Component Basic Rendering should render card with content","status":"passed","title":"should render card with content","duration":11.29733299999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","Basic Rendering"],"fullName":"Card Component Basic Rendering should render card with header","status":"passed","title":"should render card with header","duration":2.8864580000000615,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","Basic Rendering"],"fullName":"Card Component Basic Rendering should render card with footer","status":"passed","title":"should render card with footer","duration":1.5384579999999914,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","Basic Rendering"],"fullName":"Card Component Basic Rendering should render card with header and footer","status":"passed","title":"should render card with header and footer","duration":1.4776669999999967,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","Variants"],"fullName":"Card Component Variants should render default variant","status":"passed","title":"should render default variant","duration":1.7305000000000064,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","Variants"],"fullName":"Card Component Variants should render outlined variant","status":"passed","title":"should render outlined variant","duration":0.5290830000000142,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","Variants"],"fullName":"Card Component Variants should render elevated variant","status":"passed","title":"should render elevated variant","duration":1.2536250000000564,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","Padding"],"fullName":"Card Component Padding should render with no padding","status":"passed","title":"should render with no padding","duration":0.8945830000000115,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","Padding"],"fullName":"Card Component Padding should render with small padding","status":"passed","title":"should render with small padding","duration":1.9110829999999623,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","Padding"],"fullName":"Card Component Padding should render with medium padding (default)","status":"passed","title":"should render with medium padding (default)","duration":0.5485829999998941,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","Padding"],"fullName":"Card Component Padding should render with large padding","status":"passed","title":"should render with large padding","duration":0.4277909999999565,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","Interactive Features"],"fullName":"Card Component Interactive Features should handle click events","status":"passed","title":"should handle click events","duration":2.0707499999999754,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","Interactive Features"],"fullName":"Card Component Interactive Features should handle hover events","status":"passed","title":"should handle hover events","duration":1.009999999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","Custom Props"],"fullName":"Card Component Custom Props should accept custom className","status":"passed","title":"should accept custom className","duration":0.60674999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","Custom Props"],"fullName":"Card Component Custom Props should accept custom data attributes","status":"passed","title":"should accept custom data attributes","duration":0.8961249999999836,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","Custom Props"],"fullName":"Card Component Custom Props should accept ARIA attributes","status":"passed","title":"should accept ARIA attributes","duration":0.6162080000000287,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","CardHeader"],"fullName":"Card Component CardHeader should render header with proper styling","status":"passed","title":"should render header with proper styling","duration":0.45966699999996763,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","CardHeader"],"fullName":"Card Component CardHeader should accept custom className","status":"passed","title":"should accept custom className","duration":0.6140000000000327,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","CardContent"],"fullName":"Card Component CardContent should render content","status":"passed","title":"should render content","duration":0.408916999999974,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","CardContent"],"fullName":"Card Component CardContent should accept custom className","status":"passed","title":"should accept custom className","duration":0.33458299999995234,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","CardFooter"],"fullName":"Card Component CardFooter should render footer with proper styling","status":"passed","title":"should render footer with proper styling","duration":0.3156249999999545,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","CardFooter"],"fullName":"Card Component CardFooter should accept custom className","status":"passed","title":"should accept custom className","duration":0.35287500000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Card Component","Composition"],"fullName":"Card Component Composition should render complex card structure","status":"passed","title":"should render complex card structure","duration":1.3010839999999462,"failureMessages":[],"meta":{}}],"startTime":1752211157291,"endTime":1752211157325.301,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/client/src/__tests__/components/ui/Card.test.tsx"},{"assertionResults":[{"ancestorTitles":["Auth Middleware","authenticate"],"fullName":"Auth Middleware authenticate should authenticate valid token and add user to request","status":"passed","title":"should authenticate valid token and add user to request","duration":6.430207999999766,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","authenticate"],"fullName":"Auth Middleware authenticate should throw ApiError for missing authorization header","status":"passed","title":"should throw ApiError for missing authorization header","duration":4.958832999998776,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","authenticate"],"fullName":"Auth Middleware authenticate should throw ApiError for invalid token format","status":"passed","title":"should throw ApiError for invalid token format","duration":0.5134999999991123,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","authenticate"],"fullName":"Auth Middleware authenticate should throw ApiError for expired token","status":"passed","title":"should throw ApiError for expired token","duration":0.4726670000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","authenticate"],"fullName":"Auth Middleware authenticate should throw ApiError for invalid token","status":"passed","title":"should throw ApiError for invalid token","duration":0.28312499999992724,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","authenticate"],"fullName":"Auth Middleware authenticate should handle ApiError from AuthUtils correctly","status":"passed","title":"should handle ApiError from AuthUtils correctly","duration":13.12395799999831,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","optionalAuth"],"fullName":"Auth Middleware optionalAuth should authenticate valid token and add user to request","status":"passed","title":"should authenticate valid token and add user to request","duration":6.169958000000406,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","optionalAuth"],"fullName":"Auth Middleware optionalAuth should continue without user for missing authorization header","status":"passed","title":"should continue without user for missing authorization header","duration":0.29604099999960454,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","optionalAuth"],"fullName":"Auth Middleware optionalAuth should continue without user for invalid token format","status":"passed","title":"should continue without user for invalid token format","duration":0.2577499999988504,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","optionalAuth"],"fullName":"Auth Middleware optionalAuth should continue without user for expired token","status":"passed","title":"should continue without user for expired token","duration":0.15899999999965075,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","optionalAuth"],"fullName":"Auth Middleware optionalAuth should continue without user for invalid token","status":"passed","title":"should continue without user for invalid token","duration":0.09874999999919964,"failureMessages":[],"meta":{}}],"startTime":1752211153207,"endTime":1752211153240.2578,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/server/src/__tests__/unit/middleware/auth.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthUtils","hashPassword"],"fullName":"AuthUtils hashPassword should hash a password","status":"passed","title":"should hash a password","duration":898.0320830000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","hashPassword"],"fullName":"AuthUtils hashPassword should create different hashes for the same password","status":"passed","title":"should create different hashes for the same password","duration":9697.638875,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","hashPassword"],"fullName":"AuthUtils hashPassword should handle empty password","status":"passed","title":"should handle empty password","duration":610.4161249999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","comparePassword"],"fullName":"AuthUtils comparePassword should return true for matching password and hash","status":"passed","title":"should return true for matching password and hash","duration":808.4944999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","comparePassword"],"fullName":"AuthUtils comparePassword should return false for non-matching password and hash","status":"passed","title":"should return false for non-matching password and hash","duration":636.0067500000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","comparePassword"],"fullName":"AuthUtils comparePassword should return false for empty password","status":"passed","title":"should return false for empty password","duration":640.0214580000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","comparePassword"],"fullName":"AuthUtils comparePassword should return false for invalid hash","status":"passed","title":"should return false for invalid hash","duration":0.13008399999853282,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","generateTokens"],"fullName":"AuthUtils generateTokens should generate access and refresh tokens","status":"passed","title":"should generate access and refresh tokens","duration":0.3126250000004802,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","generateAccessToken"],"fullName":"AuthUtils generateAccessToken should generate an access token","status":"passed","title":"should generate an access token","duration":0.8716249999997672,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","generateRefreshToken"],"fullName":"AuthUtils generateRefreshToken should generate a refresh token","status":"passed","title":"should generate a refresh token","duration":0.2958749999997963,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","verifyToken"],"fullName":"AuthUtils verifyToken should verify a valid token","status":"passed","title":"should verify a valid token","duration":0.1915000000008149,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","verifyToken"],"fullName":"AuthUtils verifyToken should throw error for invalid token","status":"passed","title":"should throw error for invalid token","duration":0.6160830000007991,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","verifyToken"],"fullName":"AuthUtils verifyToken should throw error for expired token","status":"passed","title":"should throw error for expired token","duration":0.13150000000132422,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","verifyToken"],"fullName":"AuthUtils verifyToken should throw generic error for other verification failures","status":"passed","title":"should throw generic error for other verification failures","duration":0.0864160000000993,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","extractTokenFromHeader"],"fullName":"AuthUtils extractTokenFromHeader should extract token from Authorization header","status":"passed","title":"should extract token from Authorization header","duration":0.06174999999893771,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","extractTokenFromHeader"],"fullName":"AuthUtils extractTokenFromHeader should return null for missing Authorization header","status":"passed","title":"should return null for missing Authorization header","duration":0.04695899999933317,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","extractTokenFromHeader"],"fullName":"AuthUtils extractTokenFromHeader should return null for invalid Authorization header format","status":"passed","title":"should return null for invalid Authorization header format","duration":0.08204200000000128,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","extractTokenFromHeader"],"fullName":"AuthUtils extractTokenFromHeader should return null for missing Bearer prefix","status":"passed","title":"should return null for missing Bearer prefix","duration":0.08129199999893899,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","extractTokenFromHeader"],"fullName":"AuthUtils extractTokenFromHeader should return null for empty token","status":"passed","title":"should return null for empty token","duration":0.04749999999876309,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should validate a strong password","status":"passed","title":"should validate a strong password","duration":0.3940419999998994,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should reject password that is too short","status":"passed","title":"should reject password that is too short","duration":0.3148750000000291,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should reject password without lowercase","status":"passed","title":"should reject password without lowercase","duration":0.08412499999940337,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should reject password without uppercase","status":"passed","title":"should reject password without uppercase","duration":0.06550000000061118,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should reject password without number","status":"passed","title":"should reject password without number","duration":0.058250000000043656,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should reject password without special character","status":"passed","title":"should reject password without special character","duration":0.7154580000005808,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should return multiple errors for weak password","status":"passed","title":"should return multiple errors for weak password","duration":0.11658399999942048,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","sanitizeUserResponse"],"fullName":"AuthUtils sanitizeUserResponse should remove password_hash from user object","status":"passed","title":"should remove password_hash from user object","duration":0.7258330000004207,"failureMessages":[],"meta":{}}],"startTime":1752211144031,"endTime":1752211157327.7258,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/server/src/__tests__/unit/utils/auth.test.ts"},{"assertionResults":[{"ancestorTitles":["RecipeService","getAllRecipes"],"fullName":"RecipeService getAllRecipes should return paginated recipes with default pagination","status":"passed","title":"should return paginated recipes with default pagination","duration":4.069042000000081,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getAllRecipes"],"fullName":"RecipeService getAllRecipes should filter recipes by search term","status":"passed","title":"should filter recipes by search term","duration":0.66924999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getAllRecipes"],"fullName":"RecipeService getAllRecipes should filter recipes by category","status":"passed","title":"should filter recipes by category","duration":0.26491699999996854,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getAllRecipes"],"fullName":"RecipeService getAllRecipes should filter recipes by difficulty and user","status":"passed","title":"should filter recipes by difficulty and user","duration":0.5609580000000278,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getAllRecipes"],"fullName":"RecipeService getAllRecipes should handle custom pagination","status":"passed","title":"should handle custom pagination","duration":0.45866700000010496,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getRecipeById"],"fullName":"RecipeService getRecipeById should return recipe by ID","status":"passed","title":"should return recipe by ID","duration":0.5195830000000115,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getRecipeById"],"fullName":"RecipeService getRecipeById should return null if recipe not found","status":"passed","title":"should return null if recipe not found","duration":0.09012499999994361,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","createRecipe"],"fullName":"RecipeService createRecipe should create a new recipe successfully","status":"passed","title":"should create a new recipe successfully","duration":0.3914999999999509,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","createRecipe"],"fullName":"RecipeService createRecipe should handle database errors","status":"passed","title":"should handle database errors","duration":2.294375000000173,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","updateRecipe"],"fullName":"RecipeService updateRecipe should update recipe successfully","status":"passed","title":"should update recipe successfully","duration":1.622082999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","updateRecipe"],"fullName":"RecipeService updateRecipe should handle database errors","status":"passed","title":"should handle database errors","duration":0.8897919999999431,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","deleteRecipe"],"fullName":"RecipeService deleteRecipe should delete recipe successfully","status":"passed","title":"should delete recipe successfully","duration":0.6485830000001442,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","deleteRecipe"],"fullName":"RecipeService deleteRecipe should throw error if recipe not found","status":"passed","title":"should throw error if recipe not found","duration":0.8166670000000522,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getUserRecipes"],"fullName":"RecipeService getUserRecipes should return user recipes with pagination","status":"passed","title":"should return user recipes with pagination","duration":0.9517499999999472,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","searchRecipes"],"fullName":"RecipeService searchRecipes should search recipes by query","status":"passed","title":"should search recipes by query","duration":3.063666999999896,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getRecipesByCategory"],"fullName":"RecipeService getRecipesByCategory should return recipes by category","status":"passed","title":"should return recipes by category","duration":0.9453750000000127,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getRecipeCategories"],"fullName":"RecipeService getRecipeCategories should return unique recipe categories","status":"passed","title":"should return unique recipe categories","duration":0.5406249999998636,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","verifyRecipeOwnership"],"fullName":"RecipeService verifyRecipeOwnership should return true if user owns the recipe","status":"passed","title":"should return true if user owns the recipe","duration":0.19987500000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","verifyRecipeOwnership"],"fullName":"RecipeService verifyRecipeOwnership should return false if user does not own the recipe","status":"passed","title":"should return false if user does not own the recipe","duration":0.31904099999997015,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","verifyRecipeOwnership"],"fullName":"RecipeService verifyRecipeOwnership should return false if recipe not found","status":"passed","title":"should return false if recipe not found","duration":0.09033299999987321,"failureMessages":[],"meta":{}}],"startTime":1752211144102,"endTime":1752211144123.0903,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/server/src/__tests__/unit/services/recipeService.test.ts"},{"assertionResults":[{"ancestorTitles":["UserService","createUser"],"fullName":"UserService createUser should create a new user successfully","status":"passed","title":"should create a new user successfully","duration":4.077916999999843,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","createUser"],"fullName":"UserService createUser should throw error if user already exists","status":"passed","title":"should throw error if user already exists","duration":6.05662499999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","createUser"],"fullName":"UserService createUser should handle database errors","status":"passed","title":"should handle database errors","duration":2.2842909999999392,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getUserById"],"fullName":"UserService getUserById should return user by ID","status":"passed","title":"should return user by ID","duration":3.245584000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getUserById"],"fullName":"UserService getUserById should return null if user not found","status":"passed","title":"should return null if user not found","duration":0.3217499999998381,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getUserById"],"fullName":"UserService getUserById should handle database errors","status":"passed","title":"should handle database errors","duration":5.4335839999998825,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getUserByEmail"],"fullName":"UserService getUserByEmail should return user by email","status":"passed","title":"should return user by email","duration":1.8526250000002165,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getUserByEmail"],"fullName":"UserService getUserByEmail should return null if user not found","status":"passed","title":"should return null if user not found","duration":0.12108400000010988,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","updateUser"],"fullName":"UserService updateUser should update user successfully","status":"passed","title":"should update user successfully","duration":0.8697499999998399,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","updateUser"],"fullName":"UserService updateUser should throw error if user not found","status":"passed","title":"should throw error if user not found","duration":0.37999999999988177,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","updateUser"],"fullName":"UserService updateUser should throw error if email already exists","status":"passed","title":"should throw error if email already exists","duration":0.30874999999991815,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","deleteUser"],"fullName":"UserService deleteUser should delete user successfully","status":"passed","title":"should delete user successfully","duration":0.36533299999996416,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","deleteUser"],"fullName":"UserService deleteUser should throw error if user not found","status":"passed","title":"should throw error if user not found","duration":0.7080829999999878,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","authenticateUser"],"fullName":"UserService authenticateUser should authenticate user successfully","status":"passed","title":"should authenticate user successfully","duration":0.3624590000001717,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","authenticateUser"],"fullName":"UserService authenticateUser should return null if user not found","status":"passed","title":"should return null if user not found","duration":0.25754200000005767,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","authenticateUser"],"fullName":"UserService authenticateUser should return null if password is invalid","status":"passed","title":"should return null if password is invalid","duration":0.06437499999992724,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","changePassword"],"fullName":"UserService changePassword should change password successfully","status":"passed","title":"should change password successfully","duration":1.1047080000000733,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","changePassword"],"fullName":"UserService changePassword should throw error if user not found","status":"passed","title":"should throw error if user not found","duration":0.49491699999998673,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","changePassword"],"fullName":"UserService changePassword should throw error if current password is invalid","status":"passed","title":"should throw error if current password is invalid","duration":0.44466699999998127,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getAllUsers"],"fullName":"UserService getAllUsers should return all users","status":"passed","title":"should return all users","duration":3.373582999999826,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getUserStats"],"fullName":"UserService getUserStats should return user statistics","status":"passed","title":"should return user statistics","duration":4.815124999999853,"failureMessages":[],"meta":{}}],"startTime":1752211144096,"endTime":1752211144134.8152,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/server/src/__tests__/unit/services/userService.test.ts"},{"assertionResults":[{"ancestorTitles":["RecipeForm Component","Form Rendering"],"fullName":"RecipeForm Component Form Rendering should render form with all required fields","status":"passed","title":"should render form with all required fields","duration":28.26729099999966,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeForm Component","Form Rendering"],"fullName":"RecipeForm Component Form Rendering should render create mode by default","status":"passed","title":"should render create mode by default","duration":16.000458000000435,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeForm Component","Form Rendering"],"fullName":"RecipeForm Component Form Rendering should render back button","status":"passed","title":"should render back button","duration":7.281292000000121,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeForm Component","Form Rendering"],"fullName":"RecipeForm Component Form Rendering should render cancel button","status":"passed","title":"should render cancel button","duration":10.659000000000106,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeForm Component","Form Interaction"],"fullName":"RecipeForm Component Form Interaction should update form fields when user types","status":"passed","title":"should update form fields when user types","duration":75.51058400000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeForm Component","Form Interaction"],"fullName":"RecipeForm Component Form Interaction should update ingredients field","status":"passed","title":"should update ingredients field","duration":77.431333,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeForm Component","Form Interaction"],"fullName":"RecipeForm Component Form Interaction should update instructions field","status":"passed","title":"should update instructions field","duration":87.12641699999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeForm Component","Form Interaction"],"fullName":"RecipeForm Component Form Interaction should update numeric fields","status":"passed","title":"should update numeric fields","duration":47.37504200000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeForm Component","Form Submission"],"fullName":"RecipeForm Component Form Submission should submit form with valid data","status":"passed","title":"should submit form with valid data","duration":206.38170900000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeForm Component","Form Submission"],"fullName":"RecipeForm Component Form Submission should show loading state during submission","status":"passed","title":"should show loading state during submission","duration":138.28270800000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeForm Component","Form Submission"],"fullName":"RecipeForm Component Form Submission should handle submission error","status":"passed","title":"should handle submission error","duration":126.33858400000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeForm Component","Navigation"],"fullName":"RecipeForm Component Navigation should navigate back when back button is clicked","status":"passed","title":"should navigate back when back button is clicked","duration":10.508084000000053,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeForm Component","Navigation"],"fullName":"RecipeForm Component Navigation should navigate to recipes list when cancel button is clicked","status":"passed","title":"should navigate to recipes list when cancel button is clicked","duration":10.508624999999938,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeForm Component","Navigation"],"fullName":"RecipeForm Component Navigation should navigate to recipe detail after successful creation","status":"passed","title":"should navigate to recipe detail after successful creation","duration":112.49970800000028,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeForm Component","Image Upload"],"fullName":"RecipeForm Component Image Upload should render image upload section","status":"passed","title":"should render image upload section","duration":4.170042000000194,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeForm Component","Accessibility"],"fullName":"RecipeForm Component Accessibility should have proper form elements","status":"passed","title":"should have proper form elements","duration":7.561624999999822,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeForm Component","Accessibility"],"fullName":"RecipeForm Component Accessibility should have proper button roles","status":"passed","title":"should have proper button roles","duration":4.475665999999819,"failureMessages":[],"meta":{}}],"startTime":1752211155671,"endTime":1752211156642.4756,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/client/src/__tests__/components/features/recipes/RecipeForm.test.tsx"}]}