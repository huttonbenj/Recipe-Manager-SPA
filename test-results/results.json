{"numTotalTestSuites":88,"numPassedTestSuites":88,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":185,"numPassedTests":185,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1752188439983,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["User Types","UserSchema"],"fullName":"User Types UserSchema should validate a valid user object","status":"passed","title":"should validate a valid user object","duration":4.659834000000046,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserSchema"],"fullName":"User Types UserSchema should reject invalid user objects","status":"passed","title":"should reject invalid user objects","duration":3.1047499999999673,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserSchema"],"fullName":"User Types UserSchema should handle date parsing","status":"passed","title":"should handle date parsing","duration":0.9145409999998719,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserCredentialsSchema"],"fullName":"User Types UserCredentialsSchema should validate valid login requests","status":"passed","title":"should validate valid login requests","duration":0.44837500000016917,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserCredentialsSchema"],"fullName":"User Types UserCredentialsSchema should reject invalid login requests","status":"passed","title":"should reject invalid login requests","duration":0.4190409999998792,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserRegistrationSchema"],"fullName":"User Types UserRegistrationSchema should validate valid registration requests","status":"passed","title":"should validate valid registration requests","duration":0.2693329999999605,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserRegistrationSchema"],"fullName":"User Types UserRegistrationSchema should reject invalid registration requests","status":"passed","title":"should reject invalid registration requests","duration":0.299541999999974,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserRegistrationSchema"],"fullName":"User Types UserRegistrationSchema should validate name length constraints","status":"passed","title":"should validate name length constraints","duration":0.18358400000010988,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeSchema"],"fullName":"Recipe Types RecipeSchema should validate a valid recipe object","status":"passed","title":"should validate a valid recipe object","duration":2.5921250000001237,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeSchema"],"fullName":"Recipe Types RecipeSchema should reject invalid recipe objects","status":"passed","title":"should reject invalid recipe objects","duration":3.2409999999999854,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeSchema"],"fullName":"Recipe Types RecipeSchema should handle optional fields","status":"passed","title":"should handle optional fields","duration":0.742040999999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeCreateSchema"],"fullName":"Recipe Types RecipeCreateSchema should validate valid create recipe requests","status":"passed","title":"should validate valid create recipe requests","duration":1.1407500000000255,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeCreateSchema"],"fullName":"Recipe Types RecipeCreateSchema should reject invalid create recipe requests","status":"passed","title":"should reject invalid create recipe requests","duration":1.2963330000000042,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeUpdateSchema"],"fullName":"Recipe Types RecipeUpdateSchema should validate valid update recipe requests","status":"passed","title":"should validate valid update recipe requests","duration":1.0631670000000213,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeUpdateSchema"],"fullName":"Recipe Types RecipeUpdateSchema should allow partial updates","status":"passed","title":"should allow partial updates","duration":1.769582999999784,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeUpdateSchema"],"fullName":"Recipe Types RecipeUpdateSchema should reject invalid update recipe requests","status":"passed","title":"should reject invalid update recipe requests","duration":0.5686670000000049,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Types","ApiResponseSchema"],"fullName":"API Types ApiResponseSchema should validate valid API responses","status":"passed","title":"should validate valid API responses","duration":0.7945830000001024,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Types","ApiResponseSchema"],"fullName":"API Types ApiResponseSchema should reject invalid API responses","status":"passed","title":"should reject invalid API responses","duration":0.6218339999998079,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Types","ErrorResponseSchema"],"fullName":"API Types ErrorResponseSchema should validate valid error responses","status":"passed","title":"should validate valid error responses","duration":0.5342500000001564,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Types","ErrorResponseSchema"],"fullName":"API Types ErrorResponseSchema should reject invalid error responses","status":"passed","title":"should reject invalid error responses","duration":0.3250000000000455,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Inference"],"fullName":"Type Inference should infer correct types from schemas","status":"passed","title":"should infer correct types from schemas","duration":0.16233299999998962,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Inference"],"fullName":"Type Inference should handle complex nested types","status":"passed","title":"should handle complex nested types","duration":0.20058400000016263,"failureMessages":[],"meta":{}},{"ancestorTitles":["Schema Composition"],"fullName":"Schema Composition should compose schemas correctly","status":"passed","title":"should compose schemas correctly","duration":0.41783299999997325,"failureMessages":[],"meta":{}},{"ancestorTitles":["Schema Composition"],"fullName":"Schema Composition should handle schema picking and omitting","status":"passed","title":"should handle schema picking and omitting","duration":0.26491699999996854,"failureMessages":[],"meta":{}}],"startTime":1752188442210,"endTime":1752188442238.265,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/shared/src/__tests__/types.test.ts"},{"assertionResults":[{"ancestorTitles":["Validation Functions","validateEmail"],"fullName":"Validation Functions validateEmail should return true for valid email addresses","status":"passed","title":"should return true for valid email addresses","duration":1.3817909999999074,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateEmail"],"fullName":"Validation Functions validateEmail should return false for invalid email addresses","status":"passed","title":"should return false for invalid email addresses","duration":1.1892079999998941,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateEmail"],"fullName":"Validation Functions validateEmail should handle edge cases","status":"passed","title":"should handle edge cases","duration":0.15191600000002836,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validatePassword"],"fullName":"Validation Functions validatePassword should return valid result for strong passwords","status":"passed","title":"should return valid result for strong passwords","duration":0.9092919999999367,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validatePassword"],"fullName":"Validation Functions validatePassword should return invalid result for weak passwords","status":"passed","title":"should return invalid result for weak passwords","duration":0.9449170000000322,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validatePassword"],"fullName":"Validation Functions validatePassword should handle edge cases","status":"passed","title":"should handle edge cases","duration":0.3170000000000073,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should return valid result for complete recipe data","status":"passed","title":"should return valid result for complete recipe data","duration":0.41304200000001856,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should return invalid result for missing required fields","status":"passed","title":"should return invalid result for missing required fields","duration":0.36658299999999144,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate title constraints","status":"passed","title":"should validate title constraints","duration":0.33170799999993505,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate ingredients format","status":"passed","title":"should validate ingredients format","duration":0.3536250000000791,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate cook_time constraints","status":"passed","title":"should validate cook_time constraints","duration":0.11258299999997234,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate servings constraints","status":"passed","title":"should validate servings constraints","duration":0.08349999999995816,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate difficulty values","status":"passed","title":"should validate difficulty values","duration":0.10683299999993778,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate tags format","status":"passed","title":"should validate tags format","duration":0.0895420000000513,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should handle optional fields","status":"passed","title":"should handle optional fields","duration":0.09695799999997234,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should return valid result for complete user data","status":"passed","title":"should return valid result for complete user data","duration":0.2833329999999705,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should return invalid result for missing required fields","status":"passed","title":"should return invalid result for missing required fields","duration":0.15566599999999653,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should validate email format","status":"passed","title":"should validate email format","duration":0.16054099999996652,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should validate name constraints","status":"passed","title":"should validate name constraints","duration":0.1033750000000282,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should validate password strength","status":"passed","title":"should validate password strength","duration":0.09820799999999963,"failureMessages":[],"meta":{}},{"ancestorTitles":["ValidationError Class"],"fullName":"ValidationError Class should create ValidationError with proper properties","status":"passed","title":"should create ValidationError with proper properties","duration":1.0248330000000578,"failureMessages":[],"meta":{}},{"ancestorTitles":["ValidationError Class"],"fullName":"ValidationError Class should convert to API error format","status":"passed","title":"should convert to API error format","duration":0.34720900000002075,"failureMessages":[],"meta":{}},{"ancestorTitles":["validate function"],"fullName":"validate function should return parsed data when validation succeeds","status":"passed","title":"should return parsed data when validation succeeds","duration":0.26966699999991306,"failureMessages":[],"meta":{}},{"ancestorTitles":["validate function"],"fullName":"validate function should throw ValidationError when validation fails","status":"passed","title":"should throw ValidationError when validation fails","duration":0.3116669999999431,"failureMessages":[],"meta":{}},{"ancestorTitles":["validate function"],"fullName":"validate function should handle complex nested validation","status":"passed","title":"should handle complex nested validation","duration":1.0823339999999462,"failureMessages":[],"meta":{}}],"startTime":1752188440942,"endTime":1752188440954.0823,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/shared/src/__tests__/validation.test.ts"},{"assertionResults":[{"ancestorTitles":["LoginForm Component","Authentication State"],"fullName":"LoginForm Component Authentication State should redirect to dashboard if already authenticated","status":"passed","title":"should redirect to dashboard if already authenticated","duration":13.794500000000085,"failureMessages":[],"meta":{}},{"ancestorTitles":["LoginForm Component","Authentication State"],"fullName":"LoginForm Component Authentication State should render form if not authenticated","status":"passed","title":"should render form if not authenticated","duration":8.575958000000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["LoginForm Component","Mock Verification"],"fullName":"LoginForm Component Mock Verification should have properly mocked auth functions","status":"passed","title":"should have properly mocked auth functions","duration":0.2373330000000351,"failureMessages":[],"meta":{}},{"ancestorTitles":["LoginForm Component","Mock Verification"],"fullName":"LoginForm Component Mock Verification should call login when invoked","status":"passed","title":"should call login when invoked","duration":0.6334580000000187,"failureMessages":[],"meta":{}}],"startTime":1752188443286,"endTime":1752188443309.6335,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/client/src/__tests__/components/LoginForm.test.tsx"},{"assertionResults":[{"ancestorTitles":["Navigation Component","Unauthenticated State"],"fullName":"Navigation Component Unauthenticated State should render navigation items even when user is not authenticated","status":"passed","title":"should render navigation items even when user is not authenticated","duration":22.122041999999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Authenticated State"],"fullName":"Navigation Component Authenticated State should render navigation items when authenticated","status":"passed","title":"should render navigation items when authenticated","duration":3.899167000000034,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Authenticated State"],"fullName":"Navigation Component Authenticated State should render user menu button","status":"passed","title":"should render user menu button","duration":9.570416999999907,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Authenticated State"],"fullName":"Navigation Component Authenticated State should render navigation links with correct hrefs","status":"passed","title":"should render navigation links with correct hrefs","duration":6.377916000000141,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Authenticated State"],"fullName":"Navigation Component Authenticated State should highlight active navigation item","status":"passed","title":"should highlight active navigation item","duration":12.016624999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Authenticated State"],"fullName":"Navigation Component Authenticated State should render mobile menu button","status":"passed","title":"should render mobile menu button","duration":3.6971249999999145,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Authenticated State"],"fullName":"Navigation Component Authenticated State should render user menu button for interaction","status":"passed","title":"should render user menu button for interaction","duration":3.2299580000001242,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Loading State"],"fullName":"Navigation Component Loading State should handle loading state appropriately","status":"passed","title":"should handle loading state appropriately","duration":3.355916999999863,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Accessibility"],"fullName":"Navigation Component Accessibility should have proper ARIA labels for navigation","status":"passed","title":"should have proper ARIA labels for navigation","duration":5.262791000000107,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Accessibility"],"fullName":"Navigation Component Accessibility should have proper focus management","status":"passed","title":"should have proper focus management","duration":6.358707999999979,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Accessibility"],"fullName":"Navigation Component Accessibility should support keyboard navigation","status":"passed","title":"should support keyboard navigation","duration":18.094249999999874,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Logo and Branding"],"fullName":"Navigation Component Logo and Branding should display logo or brand name","status":"passed","title":"should display logo or brand name","duration":2.734875000000102,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Logo and Branding"],"fullName":"Navigation Component Logo and Branding should link logo to dashboard page","status":"passed","title":"should link logo to dashboard page","duration":4.296666999999843,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Active Route Highlighting"],"fullName":"Navigation Component Active Route Highlighting should highlight recipes page when on recipes route","status":"passed","title":"should highlight recipes page when on recipes route","duration":4.301375000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["Navigation Component","Active Route Highlighting"],"fullName":"Navigation Component Active Route Highlighting should highlight add recipe page when on add recipe route","status":"passed","title":"should highlight add recipe page when on add recipe route","duration":3.522333000000117,"failureMessages":[],"meta":{}}],"startTime":1752188443286,"endTime":1752188443395.5222,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/client/src/__tests__/components/Navigation.test.tsx"},{"assertionResults":[{"ancestorTitles":["useAuth Hook","Initial State"],"fullName":"useAuth Hook Initial State should initialize with null user and loading state","status":"passed","title":"should initialize with null user and loading state","duration":20.491874999999936,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Initial State"],"fullName":"useAuth Hook Initial State should restore user from storage if authenticated","status":"passed","title":"should restore user from storage if authenticated","duration":54.521417000000156,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Initial State"],"fullName":"useAuth Hook Initial State should clear auth if token is invalid","status":"passed","title":"should clear auth if token is invalid","duration":55.88954199999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Login"],"fullName":"useAuth Hook Login should login successfully and navigate to dashboard","status":"passed","title":"should login successfully and navigate to dashboard","duration":6.326500000000124,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Login"],"fullName":"useAuth Hook Login should handle login errors","status":"passed","title":"should handle login errors","duration":5.743624999999838,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Login"],"fullName":"useAuth Hook Login should set loading state during login","status":"passed","title":"should set loading state during login","duration":55.301082999999835,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Register"],"fullName":"useAuth Hook Register should register successfully and navigate to dashboard","status":"passed","title":"should register successfully and navigate to dashboard","duration":4.730250000000069,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Register"],"fullName":"useAuth Hook Register should handle registration errors","status":"passed","title":"should handle registration errors","duration":3.8766669999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Logout"],"fullName":"useAuth Hook Logout should logout successfully and navigate to login","status":"passed","title":"should logout successfully and navigate to login","duration":5.11483300000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Logout"],"fullName":"useAuth Hook Logout should handle logout errors gracefully","status":"passed","title":"should handle logout errors gracefully","duration":4.80033299999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Profile Update"],"fullName":"useAuth Hook Profile Update should update profile successfully","status":"passed","title":"should update profile successfully","duration":4.151292000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Profile Update"],"fullName":"useAuth Hook Profile Update should handle profile update errors","status":"passed","title":"should handle profile update errors","duration":4.169624999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Password Change"],"fullName":"useAuth Hook Password Change should change password successfully","status":"passed","title":"should change password successfully","duration":3.5004579999999805,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Password Change"],"fullName":"useAuth Hook Password Change should handle password change errors","status":"passed","title":"should handle password change errors","duration":2.999917000000096,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Refresh User"],"fullName":"useAuth Hook Refresh User should refresh user data successfully","status":"passed","title":"should refresh user data successfully","duration":2.6635000000001128,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Refresh User"],"fullName":"useAuth Hook Refresh User should handle refresh user errors","status":"passed","title":"should handle refresh user errors","duration":4.1967500000000655,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuth Hook","Error Handling"],"fullName":"useAuth Hook Error Handling should throw error when used outside AuthProvider","status":"passed","title":"should throw error when used outside AuthProvider","duration":2.593417000000045,"failureMessages":[],"meta":{}}],"startTime":1752188442679,"endTime":1752188442920.5935,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/client/src/__tests__/hooks/useAuth.test.tsx"},{"assertionResults":[{"ancestorTitles":["ApiClient","Authentication"],"fullName":"ApiClient Authentication should return true when authenticated","status":"passed","title":"should return true when authenticated","duration":0.7694169999999758,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Authentication"],"fullName":"ApiClient Authentication should return false when not authenticated","status":"passed","title":"should return false when not authenticated","duration":0.10262500000010277,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Authentication"],"fullName":"ApiClient Authentication should get stored user from localStorage","status":"passed","title":"should get stored user from localStorage","duration":0.3912920000000213,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Authentication"],"fullName":"ApiClient Authentication should return null when no user is stored","status":"passed","title":"should return null when no user is stored","duration":0.12716699999998582,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Authentication"],"fullName":"ApiClient Authentication should clear auth data","status":"passed","title":"should clear auth data","duration":0.550707999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Recipe Methods"],"fullName":"ApiClient Recipe Methods should call getRecipes with correct parameters","status":"passed","title":"should call getRecipes with correct parameters","duration":0.11866699999995944,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Recipe Methods"],"fullName":"ApiClient Recipe Methods should call getRecipe with correct ID","status":"passed","title":"should call getRecipe with correct ID","duration":0.12354200000004312,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Recipe Methods"],"fullName":"ApiClient Recipe Methods should call createRecipe with recipe data","status":"passed","title":"should call createRecipe with recipe data","duration":0.07549999999991996,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Recipe Methods"],"fullName":"ApiClient Recipe Methods should call updateRecipe with ID and data","status":"passed","title":"should call updateRecipe with ID and data","duration":0.25424999999995634,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Recipe Methods"],"fullName":"ApiClient Recipe Methods should call deleteRecipe with ID","status":"passed","title":"should call deleteRecipe with ID","duration":0.0870830000000069,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Auth Methods"],"fullName":"ApiClient Auth Methods should call login with credentials","status":"passed","title":"should call login with credentials","duration":0.075458000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Auth Methods"],"fullName":"ApiClient Auth Methods should call register with user data","status":"passed","title":"should call register with user data","duration":0.06787499999995816,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Auth Methods"],"fullName":"ApiClient Auth Methods should call logout","status":"passed","title":"should call logout","duration":0.05812500000001819,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Auth Methods"],"fullName":"ApiClient Auth Methods should call getCurrentUser","status":"passed","title":"should call getCurrentUser","duration":0.057332999999971435,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Auth Methods"],"fullName":"ApiClient Auth Methods should call getUserStats","status":"passed","title":"should call getUserStats","duration":0.054082999999991443,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Utility Methods"],"fullName":"ApiClient Utility Methods should call searchRecipes with parameters","status":"passed","title":"should call searchRecipes with parameters","duration":0.06524999999999181,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Utility Methods"],"fullName":"ApiClient Utility Methods should call getRecipeCategories","status":"passed","title":"should call getRecipeCategories","duration":0.052833000000077845,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Utility Methods"],"fullName":"ApiClient Utility Methods should call uploadImage with file","status":"passed","title":"should call uploadImage with file","duration":0.159041000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Utility Methods"],"fullName":"ApiClient Utility Methods should call getUserRecipes","status":"passed","title":"should call getUserRecipes","duration":0.06416699999999764,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Utility Methods"],"fullName":"ApiClient Utility Methods should call updateProfile","status":"passed","title":"should call updateProfile","duration":0.06233400000007805,"failureMessages":[],"meta":{}},{"ancestorTitles":["ApiClient","Utility Methods"],"fullName":"ApiClient Utility Methods should call changePassword","status":"passed","title":"should call changePassword","duration":0.055959000000029846,"failureMessages":[],"meta":{}}],"startTime":1752188443477,"endTime":1752188443481.056,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/client/src/__tests__/services/api.test.ts"},{"assertionResults":[{"ancestorTitles":["Auth Middleware","authenticate"],"fullName":"Auth Middleware authenticate should authenticate valid token and add user to request","status":"passed","title":"should authenticate valid token and add user to request","duration":6.5346250000000055,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","authenticate"],"fullName":"Auth Middleware authenticate should throw ApiError for missing authorization header","status":"passed","title":"should throw ApiError for missing authorization header","duration":0.8821669999999813,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","authenticate"],"fullName":"Auth Middleware authenticate should throw ApiError for invalid token format","status":"passed","title":"should throw ApiError for invalid token format","duration":0.544208000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","authenticate"],"fullName":"Auth Middleware authenticate should throw ApiError for expired token","status":"passed","title":"should throw ApiError for expired token","duration":0.5088329999999814,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","authenticate"],"fullName":"Auth Middleware authenticate should throw ApiError for invalid token","status":"passed","title":"should throw ApiError for invalid token","duration":0.8022919999999658,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","authenticate"],"fullName":"Auth Middleware authenticate should handle ApiError from AuthUtils correctly","status":"passed","title":"should handle ApiError from AuthUtils correctly","duration":0.35775000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","optionalAuth"],"fullName":"Auth Middleware optionalAuth should authenticate valid token and add user to request","status":"passed","title":"should authenticate valid token and add user to request","duration":0.35695799999996325,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","optionalAuth"],"fullName":"Auth Middleware optionalAuth should continue without user for missing authorization header","status":"passed","title":"should continue without user for missing authorization header","duration":0.16087500000003274,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","optionalAuth"],"fullName":"Auth Middleware optionalAuth should continue without user for invalid token format","status":"passed","title":"should continue without user for invalid token format","duration":0.23091600000009294,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","optionalAuth"],"fullName":"Auth Middleware optionalAuth should continue without user for expired token","status":"passed","title":"should continue without user for expired token","duration":0.1356670000000122,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Middleware","optionalAuth"],"fullName":"Auth Middleware optionalAuth should continue without user for invalid token","status":"passed","title":"should continue without user for invalid token","duration":0.09929199999999128,"failureMessages":[],"meta":{}}],"startTime":1752188441881,"endTime":1752188441892.231,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/server/src/__tests__/unit/middleware/auth.test.ts"},{"assertionResults":[{"ancestorTitles":["RecipeService","getAllRecipes"],"fullName":"RecipeService getAllRecipes should return paginated recipes with default pagination","status":"passed","title":"should return paginated recipes with default pagination","duration":5.268333999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getAllRecipes"],"fullName":"RecipeService getAllRecipes should filter recipes by search term","status":"passed","title":"should filter recipes by search term","duration":1.1899170000000368,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getAllRecipes"],"fullName":"RecipeService getAllRecipes should filter recipes by category","status":"passed","title":"should filter recipes by category","duration":0.3963330000000269,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getAllRecipes"],"fullName":"RecipeService getAllRecipes should filter recipes by difficulty and user","status":"passed","title":"should filter recipes by difficulty and user","duration":0.45983300000000327,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getAllRecipes"],"fullName":"RecipeService getAllRecipes should handle custom pagination","status":"passed","title":"should handle custom pagination","duration":0.49679200000002766,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getRecipeById"],"fullName":"RecipeService getRecipeById should return recipe by ID","status":"passed","title":"should return recipe by ID","duration":0.4669170000000804,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getRecipeById"],"fullName":"RecipeService getRecipeById should return null if recipe not found","status":"passed","title":"should return null if recipe not found","duration":0.09224999999992178,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","createRecipe"],"fullName":"RecipeService createRecipe should create a new recipe successfully","status":"passed","title":"should create a new recipe successfully","duration":0.36587499999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","createRecipe"],"fullName":"RecipeService createRecipe should handle database errors","status":"passed","title":"should handle database errors","duration":3.4759579999999914,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","updateRecipe"],"fullName":"RecipeService updateRecipe should update recipe successfully","status":"passed","title":"should update recipe successfully","duration":0.7734169999999949,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","updateRecipe"],"fullName":"RecipeService updateRecipe should handle database errors","status":"passed","title":"should handle database errors","duration":0.4372919999999567,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","deleteRecipe"],"fullName":"RecipeService deleteRecipe should delete recipe successfully","status":"passed","title":"should delete recipe successfully","duration":0.33512500000006185,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","deleteRecipe"],"fullName":"RecipeService deleteRecipe should throw error if recipe not found","status":"passed","title":"should throw error if recipe not found","duration":0.5717919999999594,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getUserRecipes"],"fullName":"RecipeService getUserRecipes should return user recipes with pagination","status":"passed","title":"should return user recipes with pagination","duration":0.24441699999999855,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","searchRecipes"],"fullName":"RecipeService searchRecipes should search recipes by query","status":"passed","title":"should search recipes by query","duration":0.27062499999999545,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getRecipesByCategory"],"fullName":"RecipeService getRecipesByCategory should return recipes by category","status":"passed","title":"should return recipes by category","duration":0.19229200000006585,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","getRecipeCategories"],"fullName":"RecipeService getRecipeCategories should return unique recipe categories","status":"passed","title":"should return unique recipe categories","duration":0.12508300000001782,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","verifyRecipeOwnership"],"fullName":"RecipeService verifyRecipeOwnership should return true if user owns the recipe","status":"passed","title":"should return true if user owns the recipe","duration":0.14720899999997528,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","verifyRecipeOwnership"],"fullName":"RecipeService verifyRecipeOwnership should return false if user does not own the recipe","status":"passed","title":"should return false if user does not own the recipe","duration":0.05662499999993997,"failureMessages":[],"meta":{}},{"ancestorTitles":["RecipeService","verifyRecipeOwnership"],"fullName":"RecipeService verifyRecipeOwnership should return false if recipe not found","status":"passed","title":"should return false if recipe not found","duration":0.050292000000013104,"failureMessages":[],"meta":{}}],"startTime":1752188440912,"endTime":1752188440928.1924,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/server/src/__tests__/unit/services/recipeService.test.ts"},{"assertionResults":[{"ancestorTitles":["UserService","createUser"],"fullName":"UserService createUser should create a new user successfully","status":"passed","title":"should create a new user successfully","duration":3.693457999999964,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","createUser"],"fullName":"UserService createUser should throw error if user already exists","status":"passed","title":"should throw error if user already exists","duration":2.328457999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","createUser"],"fullName":"UserService createUser should handle database errors","status":"passed","title":"should handle database errors","duration":1.271959000000038,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getUserById"],"fullName":"UserService getUserById should return user by ID","status":"passed","title":"should return user by ID","duration":0.22299999999995634,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getUserById"],"fullName":"UserService getUserById should return null if user not found","status":"passed","title":"should return null if user not found","duration":0.22941600000001472,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getUserById"],"fullName":"UserService getUserById should handle database errors","status":"passed","title":"should handle database errors","duration":0.4834999999999354,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getUserByEmail"],"fullName":"UserService getUserByEmail should return user by email","status":"passed","title":"should return user by email","duration":0.250583000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getUserByEmail"],"fullName":"UserService getUserByEmail should return null if user not found","status":"passed","title":"should return null if user not found","duration":0.06929100000002109,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","updateUser"],"fullName":"UserService updateUser should update user successfully","status":"passed","title":"should update user successfully","duration":0.7490420000000313,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","updateUser"],"fullName":"UserService updateUser should throw error if user not found","status":"passed","title":"should throw error if user not found","duration":0.33616700000004585,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","updateUser"],"fullName":"UserService updateUser should throw error if email already exists","status":"passed","title":"should throw error if email already exists","duration":0.2990419999999858,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","deleteUser"],"fullName":"UserService deleteUser should delete user successfully","status":"passed","title":"should delete user successfully","duration":0.3125,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","deleteUser"],"fullName":"UserService deleteUser should throw error if user not found","status":"passed","title":"should throw error if user not found","duration":1.619374999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","authenticateUser"],"fullName":"UserService authenticateUser should authenticate user successfully","status":"passed","title":"should authenticate user successfully","duration":0.41829200000006495,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","authenticateUser"],"fullName":"UserService authenticateUser should return null if user not found","status":"passed","title":"should return null if user not found","duration":0.078708000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","authenticateUser"],"fullName":"UserService authenticateUser should return null if password is invalid","status":"passed","title":"should return null if password is invalid","duration":0.061125000000060936,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","changePassword"],"fullName":"UserService changePassword should change password successfully","status":"passed","title":"should change password successfully","duration":0.952707999999916,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","changePassword"],"fullName":"UserService changePassword should throw error if user not found","status":"passed","title":"should throw error if user not found","duration":0.36579199999994216,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","changePassword"],"fullName":"UserService changePassword should throw error if current password is invalid","status":"passed","title":"should throw error if current password is invalid","duration":0.26520800000002964,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getAllUsers"],"fullName":"UserService getAllUsers should return all users","status":"passed","title":"should return all users","duration":0.803124999999909,"failureMessages":[],"meta":{}},{"ancestorTitles":["UserService","getUserStats"],"fullName":"UserService getUserStats should return user statistics","status":"passed","title":"should return user statistics","duration":1.2825000000000273,"failureMessages":[],"meta":{}}],"startTime":1752188440905,"endTime":1752188440921.2825,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/server/src/__tests__/unit/services/userService.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthUtils","hashPassword"],"fullName":"AuthUtils hashPassword should hash a password","status":"passed","title":"should hash a password","duration":350.15933300000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","hashPassword"],"fullName":"AuthUtils hashPassword should create different hashes for the same password","status":"passed","title":"should create different hashes for the same password","duration":1750.628708,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","hashPassword"],"fullName":"AuthUtils hashPassword should handle empty password","status":"passed","title":"should handle empty password","duration":304.00708299999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","comparePassword"],"fullName":"AuthUtils comparePassword should return true for matching password and hash","status":"passed","title":"should return true for matching password and hash","duration":567.8543330000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","comparePassword"],"fullName":"AuthUtils comparePassword should return false for non-matching password and hash","status":"passed","title":"should return false for non-matching password and hash","duration":703.2368749999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","comparePassword"],"fullName":"AuthUtils comparePassword should return false for empty password","status":"passed","title":"should return false for empty password","duration":588.3926249999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","comparePassword"],"fullName":"AuthUtils comparePassword should return false for invalid hash","status":"passed","title":"should return false for invalid hash","duration":0.22083399999974063,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","generateTokens"],"fullName":"AuthUtils generateTokens should generate access and refresh tokens","status":"passed","title":"should generate access and refresh tokens","duration":0.3062079999999696,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","generateAccessToken"],"fullName":"AuthUtils generateAccessToken should generate an access token","status":"passed","title":"should generate an access token","duration":0.7724170000001322,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","generateRefreshToken"],"fullName":"AuthUtils generateRefreshToken should generate a refresh token","status":"passed","title":"should generate a refresh token","duration":0.24633300000004965,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","verifyToken"],"fullName":"AuthUtils verifyToken should verify a valid token","status":"passed","title":"should verify a valid token","duration":0.19337499999983265,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","verifyToken"],"fullName":"AuthUtils verifyToken should throw error for invalid token","status":"passed","title":"should throw error for invalid token","duration":0.3945000000003347,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","verifyToken"],"fullName":"AuthUtils verifyToken should throw error for expired token","status":"passed","title":"should throw error for expired token","duration":0.093166999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","verifyToken"],"fullName":"AuthUtils verifyToken should throw generic error for other verification failures","status":"passed","title":"should throw generic error for other verification failures","duration":0.07387500000004366,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","extractTokenFromHeader"],"fullName":"AuthUtils extractTokenFromHeader should extract token from Authorization header","status":"passed","title":"should extract token from Authorization header","duration":0.05012500000066211,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","extractTokenFromHeader"],"fullName":"AuthUtils extractTokenFromHeader should return null for missing Authorization header","status":"passed","title":"should return null for missing Authorization header","duration":0.043166999999812106,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","extractTokenFromHeader"],"fullName":"AuthUtils extractTokenFromHeader should return null for invalid Authorization header format","status":"passed","title":"should return null for invalid Authorization header format","duration":0.03962500000034197,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","extractTokenFromHeader"],"fullName":"AuthUtils extractTokenFromHeader should return null for missing Bearer prefix","status":"passed","title":"should return null for missing Bearer prefix","duration":0.031582999999955064,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","extractTokenFromHeader"],"fullName":"AuthUtils extractTokenFromHeader should return null for empty token","status":"passed","title":"should return null for empty token","duration":0.03104200000052515,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should validate a strong password","status":"passed","title":"should validate a strong password","duration":0.2189170000001468,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should reject password that is too short","status":"passed","title":"should reject password that is too short","duration":0.19750000000021828,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should reject password without lowercase","status":"passed","title":"should reject password without lowercase","duration":0.06483300000036252,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should reject password without uppercase","status":"passed","title":"should reject password without uppercase","duration":0.059917000000496046,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should reject password without number","status":"passed","title":"should reject password without number","duration":0.055416999999579275,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should reject password without special character","status":"passed","title":"should reject password without special character","duration":0.114875000000211,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","validatePassword"],"fullName":"AuthUtils validatePassword should return multiple errors for weak password","status":"passed","title":"should return multiple errors for weak password","duration":0.047959000000446395,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthUtils","sanitizeUserResponse"],"fullName":"AuthUtils sanitizeUserResponse should remove password_hash from user object","status":"passed","title":"should remove password_hash from user object","duration":1.7604160000000775,"failureMessages":[],"meta":{}}],"startTime":1752188440913,"endTime":1752188445183.7605,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/server/src/__tests__/unit/utils/auth.test.ts"}]}