name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Quality Checks Job
  quality:
    runs-on: ubuntu-latest
    name: Code Quality & Type Checking

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Type checking
        run: npm run typecheck

      - name: Strict type checking
        run: npm run typecheck:strict

      - name: Lint code
        run: npm run lint

      - name: Check all quality gates
        run: npm run check:all

  # Unit & Integration Tests
  test:
    runs-on: ubuntu-latest
    name: Unit & Integration Tests
    needs: quality

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/clover.xml,./coverage/lcov.info
          flags: unit-tests
          name: unit-integration-coverage
          fail_ci_if_error: true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            test-results/
            coverage/
          retention-days: 30

  # End-to-End Tests (Cypress)
  e2e-cypress:
    runs-on: ubuntu-latest
    name: E2E Tests (Cypress)
    needs: [quality, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build applications
        run: |
          npm run build --workspace=packages/shared
          npm run build --workspace=packages/server
          npm run build --workspace=packages/client

      - name: Start server
        run: |
          npm run start --workspace=packages/server &
          sleep 5
        env:
          NODE_ENV: test

      - name: Start client
        run: |
          npm run preview --workspace=packages/client &
          sleep 5

      - name: Wait for services
        run: |
          npx wait-on http://localhost:3000 http://localhost:3001 --timeout 60000

      - name: Run Cypress tests
        run: npm run test:e2e:cypress:headless

      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: packages/e2e/cypress/screenshots
          retention-days: 30

      - name: Upload Cypress videos
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-videos
          path: packages/e2e/cypress/videos
          retention-days: 30

  # End-to-End Tests (Playwright)
  e2e-playwright:
    runs-on: ubuntu-latest
    name: E2E Tests (Playwright)
    needs: [quality, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build applications
        run: |
          npm run build --workspace=packages/shared
          npm run build --workspace=packages/server
          npm run build --workspace=packages/client

      - name: Start server
        run: |
          npm run start --workspace=packages/server &
          sleep 5
        env:
          NODE_ENV: test

      - name: Start client
        run: |
          npm run preview --workspace=packages/client &
          sleep 5

      - name: Wait for services
        run: |
          npx wait-on http://localhost:3000 http://localhost:3001 --timeout 60000

      - name: Run Playwright tests
        run: npm run test:e2e

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  # Security Audit
  security:
    runs-on: ubuntu-latest
    name: Security Audit

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=high

      - name: Run license check
        run: npx license-checker --summary

  # Build & Deploy (Production)
  build:
    runs-on: ubuntu-latest
    name: Build Applications
    needs: [quality, test]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build all packages
        run: |
          npm run build --workspace=packages/shared
          npm run build --workspace=packages/server
          npm run build --workspace=packages/client

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            packages/*/dist/
            packages/*/build/
          retention-days: 7

  # Coverage Report
  coverage-report:
    runs-on: ubuntu-latest
    name: Coverage Report
    needs: [test, e2e-cypress]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-results

      - name: Generate coverage report
        run: |
          echo "## Test Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "Coverage reports have been uploaded to Codecov" >> $GITHUB_STEP_SUMMARY
          echo "- Unit Tests: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- Integration Tests: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- E2E Tests: ✅" >> $GITHUB_STEP_SUMMARY

  # Notification
  notify:
    runs-on: ubuntu-latest
    name: Notify Results
    needs: [quality, test, e2e-cypress, e2e-playwright, security, build]
    if: always()

    steps:
      - name: Notify success
        if: needs.quality.result == 'success' && needs.test.result == 'success'
        run: |
          echo "🎉 All tests passed! Ready for deployment." >> $GITHUB_STEP_SUMMARY

      - name: Notify failure
        if: needs.quality.result == 'failure' || needs.test.result == 'failure'
        run: |
          echo "❌ Tests failed. Please check the logs." >> $GITHUB_STEP_SUMMARY
          exit 1
