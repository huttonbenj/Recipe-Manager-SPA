{"numTotalTestSuites":22,"numPassedTestSuites":22,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":49,"numPassedTests":49,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1752136353428,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["User Types","UserSchema"],"fullName":"User Types UserSchema should validate a valid user object","status":"passed","title":"should validate a valid user object","duration":2.3496249999999463,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserSchema"],"fullName":"User Types UserSchema should reject invalid user objects","status":"passed","title":"should reject invalid user objects","duration":3.023458000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserSchema"],"fullName":"User Types UserSchema should handle date parsing","status":"passed","title":"should handle date parsing","duration":0.16970900000001166,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserCredentialsSchema"],"fullName":"User Types UserCredentialsSchema should validate valid login requests","status":"passed","title":"should validate valid login requests","duration":0.21529199999997672,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserCredentialsSchema"],"fullName":"User Types UserCredentialsSchema should reject invalid login requests","status":"passed","title":"should reject invalid login requests","duration":0.17499999999995453,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserRegistrationSchema"],"fullName":"User Types UserRegistrationSchema should validate valid registration requests","status":"passed","title":"should validate valid registration requests","duration":0.1085840000000644,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserRegistrationSchema"],"fullName":"User Types UserRegistrationSchema should reject invalid registration requests","status":"passed","title":"should reject invalid registration requests","duration":0.15383300000007694,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Types","UserRegistrationSchema"],"fullName":"User Types UserRegistrationSchema should validate name length constraints","status":"passed","title":"should validate name length constraints","duration":0.09416699999997036,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeSchema"],"fullName":"Recipe Types RecipeSchema should validate a valid recipe object","status":"passed","title":"should validate a valid recipe object","duration":0.46745800000007875,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeSchema"],"fullName":"Recipe Types RecipeSchema should reject invalid recipe objects","status":"passed","title":"should reject invalid recipe objects","duration":0.4238340000000562,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeSchema"],"fullName":"Recipe Types RecipeSchema should handle optional fields","status":"passed","title":"should handle optional fields","duration":5.540917000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeCreateSchema"],"fullName":"Recipe Types RecipeCreateSchema should validate valid create recipe requests","status":"passed","title":"should validate valid create recipe requests","duration":0.6657079999999951,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeCreateSchema"],"fullName":"Recipe Types RecipeCreateSchema should reject invalid create recipe requests","status":"passed","title":"should reject invalid create recipe requests","duration":0.38200000000006185,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeUpdateSchema"],"fullName":"Recipe Types RecipeUpdateSchema should validate valid update recipe requests","status":"passed","title":"should validate valid update recipe requests","duration":0.13812500000005912,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeUpdateSchema"],"fullName":"Recipe Types RecipeUpdateSchema should allow partial updates","status":"passed","title":"should allow partial updates","duration":0.21629200000006676,"failureMessages":[],"meta":{}},{"ancestorTitles":["Recipe Types","RecipeUpdateSchema"],"fullName":"Recipe Types RecipeUpdateSchema should reject invalid update recipe requests","status":"passed","title":"should reject invalid update recipe requests","duration":0.6339999999999009,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Types","ApiResponseSchema"],"fullName":"API Types ApiResponseSchema should validate valid API responses","status":"passed","title":"should validate valid API responses","duration":0.3148749999999154,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Types","ApiResponseSchema"],"fullName":"API Types ApiResponseSchema should reject invalid API responses","status":"passed","title":"should reject invalid API responses","duration":0.11587499999995998,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Types","ErrorResponseSchema"],"fullName":"API Types ErrorResponseSchema should validate valid error responses","status":"passed","title":"should validate valid error responses","duration":0.2270419999999831,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Types","ErrorResponseSchema"],"fullName":"API Types ErrorResponseSchema should reject invalid error responses","status":"passed","title":"should reject invalid error responses","duration":0.13891699999999219,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Inference"],"fullName":"Type Inference should infer correct types from schemas","status":"passed","title":"should infer correct types from schemas","duration":0.11549999999999727,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Inference"],"fullName":"Type Inference should handle complex nested types","status":"passed","title":"should handle complex nested types","duration":0.12574999999992542,"failureMessages":[],"meta":{}},{"ancestorTitles":["Schema Composition"],"fullName":"Schema Composition should compose schemas correctly","status":"passed","title":"should compose schemas correctly","duration":0.15899999999999181,"failureMessages":[],"meta":{}},{"ancestorTitles":["Schema Composition"],"fullName":"Schema Composition should handle schema picking and omitting","status":"passed","title":"should handle schema picking and omitting","duration":0.13408299999991868,"failureMessages":[],"meta":{}}],"startTime":1752136353946,"endTime":1752136353963.134,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/shared/src/__tests__/types.test.ts"},{"assertionResults":[{"ancestorTitles":["Validation Functions","validateEmail"],"fullName":"Validation Functions validateEmail should return true for valid email addresses","status":"passed","title":"should return true for valid email addresses","duration":1.294999999999959,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateEmail"],"fullName":"Validation Functions validateEmail should return false for invalid email addresses","status":"passed","title":"should return false for invalid email addresses","duration":0.26116700000000037,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateEmail"],"fullName":"Validation Functions validateEmail should handle edge cases","status":"passed","title":"should handle edge cases","duration":0.065166999999974,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validatePassword"],"fullName":"Validation Functions validatePassword should return valid result for strong passwords","status":"passed","title":"should return valid result for strong passwords","duration":1.1647919999999203,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validatePassword"],"fullName":"Validation Functions validatePassword should return invalid result for weak passwords","status":"passed","title":"should return invalid result for weak passwords","duration":1.7332079999999905,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validatePassword"],"fullName":"Validation Functions validatePassword should handle edge cases","status":"passed","title":"should handle edge cases","duration":0.9092500000000427,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should return valid result for complete recipe data","status":"passed","title":"should return valid result for complete recipe data","duration":0.5385830000000169,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should return invalid result for missing required fields","status":"passed","title":"should return invalid result for missing required fields","duration":0.35325000000000273,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate title constraints","status":"passed","title":"should validate title constraints","duration":0.3158329999999978,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate ingredients format","status":"passed","title":"should validate ingredients format","duration":0.28449999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate cook_time constraints","status":"passed","title":"should validate cook_time constraints","duration":0.10487499999999272,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate servings constraints","status":"passed","title":"should validate servings constraints","duration":0.08170900000004622,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate difficulty values","status":"passed","title":"should validate difficulty values","duration":0.10766699999999219,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should validate tags format","status":"passed","title":"should validate tags format","duration":0.09095899999999801,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateRecipe"],"fullName":"Validation Functions validateRecipe should handle optional fields","status":"passed","title":"should handle optional fields","duration":0.05608299999994415,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should return valid result for complete user data","status":"passed","title":"should return valid result for complete user data","duration":0.1160419999999931,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should return invalid result for missing required fields","status":"passed","title":"should return invalid result for missing required fields","duration":0.10674999999991996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should validate email format","status":"passed","title":"should validate email format","duration":0.06020899999998619,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should validate name constraints","status":"passed","title":"should validate name constraints","duration":0.05950000000007094,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Functions","validateUser"],"fullName":"Validation Functions validateUser should validate password strength","status":"passed","title":"should validate password strength","duration":0.058374999999955435,"failureMessages":[],"meta":{}},{"ancestorTitles":["ValidationError Class"],"fullName":"ValidationError Class should create ValidationError with proper properties","status":"passed","title":"should create ValidationError with proper properties","duration":3.5950419999999212,"failureMessages":[],"meta":{}},{"ancestorTitles":["ValidationError Class"],"fullName":"ValidationError Class should convert to API error format","status":"passed","title":"should convert to API error format","duration":1.0002090000000408,"failureMessages":[],"meta":{}},{"ancestorTitles":["validate function"],"fullName":"validate function should return parsed data when validation succeeds","status":"passed","title":"should return parsed data when validation succeeds","duration":0.8219579999999951,"failureMessages":[],"meta":{}},{"ancestorTitles":["validate function"],"fullName":"validate function should throw ValidationError when validation fails","status":"passed","title":"should throw ValidationError when validation fails","duration":0.3561249999999063,"failureMessages":[],"meta":{}},{"ancestorTitles":["validate function"],"fullName":"validate function should handle complex nested validation","status":"passed","title":"should handle complex nested validation","duration":1.2674580000000333,"failureMessages":[],"meta":{}}],"startTime":1752136353935,"endTime":1752136353951.2676,"status":"passed","message":"","name":"/Users/benh/GitHub/Recipe-Manager-SPA/packages/shared/src/__tests__/validation.test.ts"}]}