# Multi-stage build for React frontend
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy root package files for workspace setup
COPY package*.json ./
COPY apps/frontend/package*.json ./apps/frontend/
COPY packages/shared-types ./packages/shared-types/

# Install dependencies for both frontend and shared-types (workspace-aware, skip prepare scripts)
RUN npm ci --workspace=apps/frontend --workspace=packages/shared-types --omit=dev --ignore-scripts && \
    npm install @types/node --workspace=apps/frontend

# Build shared-types package first (required for frontend imports)
RUN npm run build --workspace=packages/shared-types

# Copy source code
COPY apps/frontend/ ./apps/frontend/

# Build the application
RUN npm run build --workspace=apps/frontend

# Production stage
FROM nginx:alpine AS production

# Install security updates
RUN apk --no-cache add ca-certificates && \
    apk --no-cache upgrade

# Copy built assets from builder stage
COPY --from=builder /app/apps/frontend/dist /usr/share/nginx/html

# Copy nginx configuration
COPY apps/frontend/nginx.conf /etc/nginx/conf.d/default.conf

# Create non-root user (nginx group already exists)
RUN adduser -S appuser -u 1001 -G nginx

# Set permissions
RUN chown -R appuser:nginx /usr/share/nginx/html && \
    chown -R appuser:nginx /var/cache/nginx && \
    chown -R appuser:nginx /var/log/nginx && \
    chown -R appuser:nginx /etc/nginx/conf.d

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:80/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"] 